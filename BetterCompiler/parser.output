Terminals unused in grammar

    TRUE
    FALSE


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList

    4 Stmt: Declaration
    5     | DeclarationAssignment
    6     | Assignment
    7     | Print
    8     | FunctionCall
    9     | FunctionDeclaration
   10     | IfBlock
   11     | WhileStmt

   12 IfBlock: IfStmt ElseIfStmt ElseStmt

   13 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE

   14 ElseIfStmt: ε
   15           | ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

   16 ElseStmt: ε
   17         | ELSE LBRACE Block RBRACE

   18 WhileStmt: WHILE LPAREN Condition RPAREN LBRACE Block RBRACE

   19 Condition: Expr SIGN Expr ConditionTail

   20 ConditionTail: ε
   21              | CONJUNCTION Condition

   22 SIGN: GREATER_THAN
   23     | LESS_THAN
   24     | EQUAL_TO
   25     | GREATER_THAN_EQUAL_TO
   26     | LESS_THAN_EQUAL_TO
   27     | NOT_EQUAL_TO

   28 CONJUNCTION: AND
   29            | OR

   30 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

   31 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON

   32 ParamList: ε
   33          | ParamTail

   34 ParamTail: Param
   35          | Param COMMA ParamTail

   36 Param: Type ID
   37      | Type ID LBRACKET RBRACKET

   38 ArgList: ε
   39        | ArgTail

   40 ArgTail: Expr
   41        | Expr COMMA ArgTail

   42 Block: BlockStmtList ReturnStmt
   43      | BlockStmtList

   44 BlockStmtList: ε
   45              | BlockStmt BlockStmtList

   46 BlockStmt: Declaration
   47          | DeclarationAssignment
   48          | Assignment
   49          | Print
   50          | FunctionCall
   51          | IfBlock

   52 ReturnStmt: RETURN Expr SEMICOLON

   53 Declaration: Type ID SEMICOLON
   54            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   55 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON
   56                      | Type ID ASSIGN FunctionCall

   57 Type: INT
   58     | FLOAT
   59     | BOOL
   60     | VOID

   61 Assignment: ID ASSIGN Expr SEMICOLON
   62           | ID ASSIGN FunctionCall
   63           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   64           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall

   65 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   66 Expr: Expr PLUS Term
   67     | Expr MINUS Term
   68     | Term

   69 Term: Term MULT Factor
   70     | Term DIV Factor
   71     | Factor

   72 Factor: LPAREN Expr RPAREN
   73       | ID
   74       | ID LBRACKET Expr RBRACKET
   75       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 30 31 36 37 53 54 55 56 61 62 63 64 73 74
    INT <string> (259) 57
    FLOAT <string> (260) 58
    BOOL <string> (261) 59
    VOID <string> (262) 60
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 65
    IF <string> (266) 13
    ELSE <string> (267) 17
    ELSE_IF <string> (268) 15
    WHILE <string> (269) 18
    RETURN <string> (270) 52
    SEMICOLON <character> (271) 31 52 53 54 55 61 63 65
    COMMA <character> (272) 35 41
    LPAREN <character> (273) 13 15 18 30 31 65 72
    RPAREN <character> (274) 13 15 18 30 31 65 72
    LBRACE <character> (275) 13 15 17 18 30
    RBRACE <character> (276) 13 15 17 18 30
    LBRACKET <character> (277) 37 54 63 64 74
    RBRACKET <character> (278) 37 54 63 64 74
    ASSIGN <op> (279) 55 56 61 62 63 64
    PLUS <op> (280) 66
    MINUS <op> (281) 67
    MULT <op> (282) 69
    DIV <op> (283) 70
    GREATER_THAN <stringOp> (284) 22
    LESS_THAN <stringOp> (285) 23
    EQUAL_TO <stringOp> (286) 24
    GREATER_THAN_EQUAL_TO <stringOp> (287) 25
    LESS_THAN_EQUAL_TO <stringOp> (288) 26
    AND <stringOp> (289) 28
    OR <stringOp> (290) 29
    NOT_EQUAL_TO <stringOp> (291) 27
    NUMBER <number> (292) 75


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    Program <node> (39)
        on left: 1
        on right: 0
    StmtList <node> (40)
        on left: 2 3
        on right: 1 3
    Stmt <node> (41)
        on left: 4 5 6 7 8 9 10 11
        on right: 3
    IfBlock <node> (42)
        on left: 12
        on right: 10 51
    IfStmt <node> (43)
        on left: 13
        on right: 12
    ElseIfStmt <node> (44)
        on left: 14 15
        on right: 12 15
    ElseStmt <node> (45)
        on left: 16 17
        on right: 12
    WhileStmt <node> (46)
        on left: 18
        on right: 11
    Condition <node> (47)
        on left: 19
        on right: 13 15 18 21
    ConditionTail <node> (48)
        on left: 20 21
        on right: 19
    SIGN <node> (49)
        on left: 22 23 24 25 26 27
        on right: 19
    CONJUNCTION <node> (50)
        on left: 28 29
        on right: 21
    FunctionDeclaration <node> (51)
        on left: 30
        on right: 9
    FunctionCall <node> (52)
        on left: 31
        on right: 8 50 56 62 64
    ParamList <node> (53)
        on left: 32 33
        on right: 30
    ParamTail <node> (54)
        on left: 34 35
        on right: 33 35
    Param <node> (55)
        on left: 36 37
        on right: 34 35
    ArgList <node> (56)
        on left: 38 39
        on right: 31
    ArgTail <node> (57)
        on left: 40 41
        on right: 39 41
    Block <node> (58)
        on left: 42 43
        on right: 13 15 17 18 30
    BlockStmtList <node> (59)
        on left: 44 45
        on right: 42 43 45
    BlockStmt <node> (60)
        on left: 46 47 48 49 50 51
        on right: 45
    ReturnStmt <node> (61)
        on left: 52
        on right: 42
    Declaration <node> (62)
        on left: 53 54
        on right: 4 46
    DeclarationAssignment <node> (63)
        on left: 55 56
        on right: 5 47
    Type <node> (64)
        on left: 57 58 59 60
        on right: 30 36 37 53 54 55 56
    Assignment <node> (65)
        on left: 61 62 63 64
        on right: 6 48
    Print <node> (66)
        on left: 65
        on right: 7 49
    Expr <node> (67)
        on left: 66 67 68
        on right: 19 40 41 52 54 55 61 63 64 65 66 67 72 74
    Term <node> (68)
        on left: 69 70 71
        on right: 66 67 68 69 70
    Factor <node> (69)
        on left: 72 73 74 75
        on right: 69 70 71


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    $default  reduce using rule 2 (StmtList)

    Program                go to state 9
    StmtList               go to state 10
    Stmt                   go to state 11
    IfBlock                go to state 12
    IfStmt                 go to state 13
    WhileStmt              go to state 14
    FunctionDeclaration    go to state 15
    FunctionCall           go to state 16
    Declaration            go to state 17
    DeclarationAssignment  go to state 18
    Type                   go to state 19
    Assignment             go to state 20
    Print                  go to state 21


State 1

   31 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   61 Assignment: ID • ASSIGN Expr SEMICOLON
   62           | ID • ASSIGN FunctionCall
   63           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   64           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall

    LPAREN    shift, and go to state 22
    LBRACKET  shift, and go to state 23
    ASSIGN    shift, and go to state 24


State 2

   57 Type: INT •

    $default  reduce using rule 57 (Type)


State 3

   58 Type: FLOAT •

    $default  reduce using rule 58 (Type)


State 4

   59 Type: BOOL •

    $default  reduce using rule 59 (Type)


State 5

   60 Type: VOID •

    $default  reduce using rule 60 (Type)


State 6

   65 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 25


State 7

   13 IfStmt: IF • LPAREN Condition RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 26


State 8

   18 WhileStmt: WHILE • LPAREN Condition RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 27


State 9

    0 $accept: Program • $end

    $end  shift, and go to state 28


State 10

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 11

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    $default  reduce using rule 2 (StmtList)

    StmtList               go to state 29
    Stmt                   go to state 11
    IfBlock                go to state 12
    IfStmt                 go to state 13
    WhileStmt              go to state 14
    FunctionDeclaration    go to state 15
    FunctionCall           go to state 16
    Declaration            go to state 17
    DeclarationAssignment  go to state 18
    Type                   go to state 19
    Assignment             go to state 20
    Print                  go to state 21


State 12

   10 Stmt: IfBlock •

    $default  reduce using rule 10 (Stmt)


State 13

   12 IfBlock: IfStmt • ElseIfStmt ElseStmt

    ELSE_IF  shift, and go to state 30

    $default  reduce using rule 14 (ElseIfStmt)

    ElseIfStmt  go to state 31


State 14

   11 Stmt: WhileStmt •

    $default  reduce using rule 11 (Stmt)


State 15

    9 Stmt: FunctionDeclaration •

    $default  reduce using rule 9 (Stmt)


State 16

    8 Stmt: FunctionCall •

    $default  reduce using rule 8 (Stmt)


State 17

    4 Stmt: Declaration •

    $default  reduce using rule 4 (Stmt)


State 18

    5 Stmt: DeclarationAssignment •

    $default  reduce using rule 5 (Stmt)


State 19

   30 FunctionDeclaration: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   53 Declaration: Type • ID SEMICOLON
   54            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   55 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON
   56                      | Type • ID ASSIGN FunctionCall

    ID  shift, and go to state 32


State 20

    6 Stmt: Assignment •

    $default  reduce using rule 6 (Stmt)


State 21

    7 Stmt: Print •

    $default  reduce using rule 7 (Stmt)


State 22

   31 FunctionCall: ID LPAREN • ArgList RPAREN SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    $default  reduce using rule 38 (ArgList)

    ArgList  go to state 36
    ArgTail  go to state 37
    Expr     go to state 38
    Term     go to state 39
    Factor   go to state 40


State 23

   63 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   64           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 41
    Term    go to state 39
    Factor  go to state 40


State 24

   61 Assignment: ID ASSIGN • Expr SEMICOLON
   62           | ID ASSIGN • FunctionCall

    ID      shift, and go to state 42
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    FunctionCall  go to state 43
    Expr          go to state 44
    Term          go to state 39
    Factor        go to state 40


State 25

   65 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 45
    Term    go to state 39
    Factor  go to state 40


State 26

   13 IfStmt: IF LPAREN • Condition RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Condition  go to state 46
    Expr       go to state 47
    Term       go to state 39
    Factor     go to state 40


State 27

   18 WhileStmt: WHILE LPAREN • Condition RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Condition  go to state 48
    Expr       go to state 47
    Term       go to state 39
    Factor     go to state 40


State 28

    0 $accept: Program $end •

    $default  accept


State 29

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 30

   15 ElseIfStmt: ELSE_IF • LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    LPAREN  shift, and go to state 49


State 31

   12 IfBlock: IfStmt ElseIfStmt • ElseStmt

    ELSE  shift, and go to state 50

    $default  reduce using rule 16 (ElseStmt)

    ElseStmt  go to state 51


State 32

   30 FunctionDeclaration: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   53 Declaration: Type ID • SEMICOLON
   54            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   55 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON
   56                      | Type ID • ASSIGN FunctionCall

    SEMICOLON  shift, and go to state 52
    LPAREN     shift, and go to state 53
    LBRACKET   shift, and go to state 54
    ASSIGN     shift, and go to state 55


State 33

   73 Factor: ID •
   74       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 56

    $default  reduce using rule 73 (Factor)


State 34

   72 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 57
    Term    go to state 39
    Factor  go to state 40


State 35

   75 Factor: NUMBER •

    $default  reduce using rule 75 (Factor)


State 36

   31 FunctionCall: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 58


State 37

   39 ArgList: ArgTail •

    $default  reduce using rule 39 (ArgList)


State 38

   40 ArgTail: Expr •
   41        | Expr • COMMA ArgTail
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    COMMA  shift, and go to state 59
    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61

    $default  reduce using rule 40 (ArgTail)


State 39

   68 Expr: Term •
   69 Term: Term • MULT Factor
   70     | Term • DIV Factor

    MULT  shift, and go to state 62
    DIV   shift, and go to state 63

    $default  reduce using rule 68 (Expr)


State 40

   71 Term: Factor •

    $default  reduce using rule 71 (Term)


State 41

   63 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   64           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    RBRACKET  shift, and go to state 64
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61


State 42

   31 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   73 Factor: ID •
   74       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 22
    LBRACKET  shift, and go to state 56

    $default  reduce using rule 73 (Factor)


State 43

   62 Assignment: ID ASSIGN FunctionCall •

    $default  reduce using rule 62 (Assignment)


State 44

   61 Assignment: ID ASSIGN Expr • SEMICOLON
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 65
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61


State 45

   65 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    RPAREN  shift, and go to state 66
    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61


State 46

   13 IfStmt: IF LPAREN Condition • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 67


State 47

   19 Condition: Expr • SIGN Expr ConditionTail
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    PLUS                   shift, and go to state 60
    MINUS                  shift, and go to state 61
    GREATER_THAN           shift, and go to state 68
    LESS_THAN              shift, and go to state 69
    EQUAL_TO               shift, and go to state 70
    GREATER_THAN_EQUAL_TO  shift, and go to state 71
    LESS_THAN_EQUAL_TO     shift, and go to state 72
    NOT_EQUAL_TO           shift, and go to state 73

    SIGN  go to state 74


State 48

   18 WhileStmt: WHILE LPAREN Condition • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 75


State 49

   15 ElseIfStmt: ELSE_IF LPAREN • Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Condition  go to state 76
    Expr       go to state 47
    Term       go to state 39
    Factor     go to state 40


State 50

   17 ElseStmt: ELSE • LBRACE Block RBRACE

    LBRACE  shift, and go to state 77


State 51

   12 IfBlock: IfStmt ElseIfStmt ElseStmt •

    $default  reduce using rule 12 (IfBlock)


State 52

   53 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 53 (Declaration)


State 53

   30 FunctionDeclaration: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 32 (ParamList)

    ParamList  go to state 78
    ParamTail  go to state 79
    Param      go to state 80
    Type       go to state 81


State 54

   54 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 82
    Term    go to state 39
    Factor  go to state 40


State 55

   55 DeclarationAssignment: Type ID ASSIGN • Expr SEMICOLON
   56                      | Type ID ASSIGN • FunctionCall

    ID      shift, and go to state 42
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    FunctionCall  go to state 83
    Expr          go to state 84
    Term          go to state 39
    Factor        go to state 40


State 56

   74 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 85
    Term    go to state 39
    Factor  go to state 40


State 57

   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term
   72 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 86
    PLUS    shift, and go to state 60
    MINUS   shift, and go to state 61


State 58

   31 FunctionCall: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 59

   41 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    ArgTail  go to state 88
    Expr     go to state 38
    Term     go to state 39
    Factor   go to state 40


State 60

   66 Expr: Expr PLUS • Term

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Term    go to state 89
    Factor  go to state 40


State 61

   67 Expr: Expr MINUS • Term

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Term    go to state 90
    Factor  go to state 40


State 62

   69 Term: Term MULT • Factor

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Factor  go to state 91


State 63

   70 Term: Term DIV • Factor

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Factor  go to state 92


State 64

   63 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   64           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall

    ASSIGN  shift, and go to state 93


State 65

   61 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 61 (Assignment)


State 66

   65 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 67

   13 IfStmt: IF LPAREN Condition RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 95


State 68

   22 SIGN: GREATER_THAN •

    $default  reduce using rule 22 (SIGN)


State 69

   23 SIGN: LESS_THAN •

    $default  reduce using rule 23 (SIGN)


State 70

   24 SIGN: EQUAL_TO •

    $default  reduce using rule 24 (SIGN)


State 71

   25 SIGN: GREATER_THAN_EQUAL_TO •

    $default  reduce using rule 25 (SIGN)


State 72

   26 SIGN: LESS_THAN_EQUAL_TO •

    $default  reduce using rule 26 (SIGN)


State 73

   27 SIGN: NOT_EQUAL_TO •

    $default  reduce using rule 27 (SIGN)


State 74

   19 Condition: Expr SIGN • Expr ConditionTail

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 96
    Term    go to state 39
    Factor  go to state 40


State 75

   18 WhileStmt: WHILE LPAREN Condition RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 97


State 76

   15 ElseIfStmt: ELSE_IF LPAREN Condition • RPAREN LBRACE Block RBRACE ElseIfStmt

    RPAREN  shift, and go to state 98


State 77

   17 ElseStmt: ELSE LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 44 (BlockStmtList)

    IfBlock                go to state 99
    IfStmt                 go to state 13
    FunctionCall           go to state 100
    Block                  go to state 101
    BlockStmtList          go to state 102
    BlockStmt              go to state 103
    Declaration            go to state 104
    DeclarationAssignment  go to state 105
    Type                   go to state 106
    Assignment             go to state 107
    Print                  go to state 108


State 78

   30 FunctionDeclaration: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 109


State 79

   33 ParamList: ParamTail •

    $default  reduce using rule 33 (ParamList)


State 80

   34 ParamTail: Param •
   35          | Param • COMMA ParamTail

    COMMA  shift, and go to state 110

    $default  reduce using rule 34 (ParamTail)


State 81

   36 Param: Type • ID
   37      | Type • ID LBRACKET RBRACKET

    ID  shift, and go to state 111


State 82

   54 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    RBRACKET  shift, and go to state 112
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61


State 83

   56 DeclarationAssignment: Type ID ASSIGN FunctionCall •

    $default  reduce using rule 56 (DeclarationAssignment)


State 84

   55 DeclarationAssignment: Type ID ASSIGN Expr • SEMICOLON
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 113
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61


State 85

   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term
   74 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 114
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61


State 86

   72 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 72 (Factor)


State 87

   31 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 31 (FunctionCall)


State 88

   41 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 41 (ArgTail)


State 89

   66 Expr: Expr PLUS Term •
   69 Term: Term • MULT Factor
   70     | Term • DIV Factor

    MULT  shift, and go to state 62
    DIV   shift, and go to state 63

    $default  reduce using rule 66 (Expr)


State 90

   67 Expr: Expr MINUS Term •
   69 Term: Term • MULT Factor
   70     | Term • DIV Factor

    MULT  shift, and go to state 62
    DIV   shift, and go to state 63

    $default  reduce using rule 67 (Expr)


State 91

   69 Term: Term MULT Factor •

    $default  reduce using rule 69 (Term)


State 92

   70 Term: Term DIV Factor •

    $default  reduce using rule 70 (Term)


State 93

   63 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   64           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall

    ID      shift, and go to state 42
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    FunctionCall  go to state 115
    Expr          go to state 116
    Term          go to state 39
    Factor        go to state 40


State 94

   65 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 65 (Print)


State 95

   13 IfStmt: IF LPAREN Condition RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 44 (BlockStmtList)

    IfBlock                go to state 99
    IfStmt                 go to state 13
    FunctionCall           go to state 100
    Block                  go to state 117
    BlockStmtList          go to state 102
    BlockStmt              go to state 103
    Declaration            go to state 104
    DeclarationAssignment  go to state 105
    Type                   go to state 106
    Assignment             go to state 107
    Print                  go to state 108


State 96

   19 Condition: Expr SIGN Expr • ConditionTail
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    PLUS   shift, and go to state 60
    MINUS  shift, and go to state 61
    AND    shift, and go to state 118
    OR     shift, and go to state 119

    $default  reduce using rule 20 (ConditionTail)

    ConditionTail  go to state 120
    CONJUNCTION    go to state 121


State 97

   18 WhileStmt: WHILE LPAREN Condition RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 44 (BlockStmtList)

    IfBlock                go to state 99
    IfStmt                 go to state 13
    FunctionCall           go to state 100
    Block                  go to state 122
    BlockStmtList          go to state 102
    BlockStmt              go to state 103
    Declaration            go to state 104
    DeclarationAssignment  go to state 105
    Type                   go to state 106
    Assignment             go to state 107
    Print                  go to state 108


State 98

   15 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN • LBRACE Block RBRACE ElseIfStmt

    LBRACE  shift, and go to state 123


State 99

   51 BlockStmt: IfBlock •

    $default  reduce using rule 51 (BlockStmt)


State 100

   50 BlockStmt: FunctionCall •

    $default  reduce using rule 50 (BlockStmt)


State 101

   17 ElseStmt: ELSE LBRACE Block • RBRACE

    RBRACE  shift, and go to state 124


State 102

   42 Block: BlockStmtList • ReturnStmt
   43      | BlockStmtList •

    RETURN  shift, and go to state 125

    $default  reduce using rule 43 (Block)

    ReturnStmt  go to state 126


State 103

   45 BlockStmtList: BlockStmt • BlockStmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 44 (BlockStmtList)

    IfBlock                go to state 99
    IfStmt                 go to state 13
    FunctionCall           go to state 100
    BlockStmtList          go to state 127
    BlockStmt              go to state 103
    Declaration            go to state 104
    DeclarationAssignment  go to state 105
    Type                   go to state 106
    Assignment             go to state 107
    Print                  go to state 108


State 104

   46 BlockStmt: Declaration •

    $default  reduce using rule 46 (BlockStmt)


State 105

   47 BlockStmt: DeclarationAssignment •

    $default  reduce using rule 47 (BlockStmt)


State 106

   53 Declaration: Type • ID SEMICOLON
   54            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   55 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON
   56                      | Type • ID ASSIGN FunctionCall

    ID  shift, and go to state 128


State 107

   48 BlockStmt: Assignment •

    $default  reduce using rule 48 (BlockStmt)


State 108

   49 BlockStmt: Print •

    $default  reduce using rule 49 (BlockStmt)


State 109

   30 FunctionDeclaration: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 129


State 110

   35 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 130
    Param      go to state 80
    Type       go to state 81


State 111

   36 Param: Type ID •
   37      | Type ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 131

    $default  reduce using rule 36 (Param)


State 112

   54 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 132


State 113

   55 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 55 (DeclarationAssignment)


State 114

   74 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 74 (Factor)


State 115

   64 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall •

    $default  reduce using rule 64 (Assignment)


State 116

   63 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 133
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61


State 117

   13 IfStmt: IF LPAREN Condition RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 134


State 118

   28 CONJUNCTION: AND •

    $default  reduce using rule 28 (CONJUNCTION)


State 119

   29 CONJUNCTION: OR •

    $default  reduce using rule 29 (CONJUNCTION)


State 120

   19 Condition: Expr SIGN Expr ConditionTail •

    $default  reduce using rule 19 (Condition)


State 121

   21 ConditionTail: CONJUNCTION • Condition

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Condition  go to state 135
    Expr       go to state 47
    Term       go to state 39
    Factor     go to state 40


State 122

   18 WhileStmt: WHILE LPAREN Condition RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 136


State 123

   15 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE • Block RBRACE ElseIfStmt

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 44 (BlockStmtList)

    IfBlock                go to state 99
    IfStmt                 go to state 13
    FunctionCall           go to state 100
    Block                  go to state 137
    BlockStmtList          go to state 102
    BlockStmt              go to state 103
    Declaration            go to state 104
    DeclarationAssignment  go to state 105
    Type                   go to state 106
    Assignment             go to state 107
    Print                  go to state 108


State 124

   17 ElseStmt: ELSE LBRACE Block RBRACE •

    $default  reduce using rule 17 (ElseStmt)


State 125

   52 ReturnStmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 138
    Term    go to state 39
    Factor  go to state 40


State 126

   42 Block: BlockStmtList ReturnStmt •

    $default  reduce using rule 42 (Block)


State 127

   45 BlockStmtList: BlockStmt BlockStmtList •

    $default  reduce using rule 45 (BlockStmtList)


State 128

   53 Declaration: Type ID • SEMICOLON
   54            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   55 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON
   56                      | Type ID • ASSIGN FunctionCall

    SEMICOLON  shift, and go to state 52
    LBRACKET   shift, and go to state 54
    ASSIGN     shift, and go to state 55


State 129

   30 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 44 (BlockStmtList)

    IfBlock                go to state 99
    IfStmt                 go to state 13
    FunctionCall           go to state 100
    Block                  go to state 139
    BlockStmtList          go to state 102
    BlockStmt              go to state 103
    Declaration            go to state 104
    DeclarationAssignment  go to state 105
    Type                   go to state 106
    Assignment             go to state 107
    Print                  go to state 108


State 130

   35 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 35 (ParamTail)


State 131

   37 Param: Type ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 140


State 132

   54 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 54 (Declaration)


State 133

   63 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 63 (Assignment)


State 134

   13 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 13 (IfStmt)


State 135

   21 ConditionTail: CONJUNCTION Condition •

    $default  reduce using rule 21 (ConditionTail)


State 136

   18 WhileStmt: WHILE LPAREN Condition RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 18 (WhileStmt)


State 137

   15 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block • RBRACE ElseIfStmt

    RBRACE  shift, and go to state 141


State 138

   52 ReturnStmt: RETURN Expr • SEMICOLON
   66 Expr: Expr • PLUS Term
   67     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 142
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61


State 139

   30 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 143


State 140

   37 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 37 (Param)


State 141

   15 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE • ElseIfStmt

    ELSE_IF  shift, and go to state 30

    $default  reduce using rule 14 (ElseIfStmt)

    ElseIfStmt  go to state 144


State 142

   52 ReturnStmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 52 (ReturnStmt)


State 143

   30 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 30 (FunctionDeclaration)


State 144

   15 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt •

    $default  reduce using rule 15 (ElseIfStmt)
