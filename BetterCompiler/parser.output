Terminals unused in grammar

    TRUE
    FALSE
    IF
    ELSE
    WHILE


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList
    4         | FunctionDefinition StmtList

    5 FunctionDefinition: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

    6 FunctionCall: ID LPAREN ArgList RPAREN

    7 ParamList: ε
    8          | ParamTail

    9 ParamTail: Param
   10          | Param COMMA ParamTail

   11 Param: Type ID
   12      | Type ID LBRACKET RBRACKET
   13      | Type ID LBRACKET NUMBER RBRACKET

   14 ArgList: ε
   15        | ArgTail

   16 ArgTail: Expr
   17        | Expr COMMA ArgTail

   18 Block: StmtList RETURN Expr SEMICOLON
   19      | StmtList

   20 Stmt: Declaration
   21     | Assignment
   22     | Print
   23     | FunctionCall

   24 Declaration: Type ID SEMICOLON
   25            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   26 Type: INT
   27     | FLOAT
   28     | BOOL
   29     | VOID

   30 Assignment: ID ASSIGN Expr SEMICOLON
   31           | ID ASSIGN FunctionCall SEMICOLON
   32           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   33           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall SEMICOLON

   34 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   35 Expr: Expr PLUS Term
   36     | Expr MINUS Term
   37     | Term

   38 Term: Term MULT Factor
   39     | Term DIV Factor
   40     | Factor

   41 Factor: LPAREN Expr RPAREN
   42       | ID
   43       | ID LBRACKET Expr RBRACKET
   44       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 5 6 11 12 13 24 25 30 31 32 33 42 43
    INT <string> (259) 26
    FLOAT <string> (260) 27
    BOOL <string> (261) 28
    VOID <string> (262) 29
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 34
    IF <string> (266)
    ELSE <string> (267)
    WHILE <string> (268)
    RETURN <string> (269) 18
    SEMICOLON <character> (270) 18 24 25 30 31 32 33 34
    COMMA <character> (271) 10 17
    LPAREN <character> (272) 5 6 34 41
    RPAREN <character> (273) 5 6 34 41
    LBRACE <character> (274) 5
    RBRACE <character> (275) 5
    LBRACKET <character> (276) 12 13 25 32 33 43
    RBRACKET <character> (277) 12 13 25 32 33 43
    ASSIGN <op> (278) 30 31 32 33
    PLUS <op> (279) 35
    MINUS <op> (280) 36
    MULT <op> (281) 38
    DIV <op> (282) 39
    NUMBER <number> (283) 13 44


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    Program <node> (30)
        on left: 1
        on right: 0
    StmtList <node> (31)
        on left: 2 3 4
        on right: 1 3 4 18 19
    FunctionDefinition (32)
        on left: 5
        on right: 4
    FunctionCall (33)
        on left: 6
        on right: 23 31 33
    ParamList (34)
        on left: 7 8
        on right: 5
    ParamTail (35)
        on left: 9 10
        on right: 8 10
    Param (36)
        on left: 11 12 13
        on right: 9 10
    ArgList (37)
        on left: 14 15
        on right: 6
    ArgTail (38)
        on left: 16 17
        on right: 15 17
    Block (39)
        on left: 18 19
        on right: 5
    Stmt <node> (40)
        on left: 20 21 22 23
        on right: 3
    Declaration <node> (41)
        on left: 24 25
        on right: 20
    Type <node> (42)
        on left: 26 27 28 29
        on right: 5 11 12 13 24 25
    Assignment <node> (43)
        on left: 30 31 32 33
        on right: 21
    Print <node> (44)
        on left: 34
        on right: 22
    Expr <node> (45)
        on left: 35 36 37
        on right: 16 17 18 25 30 32 33 34 35 36 41 43
    Term <node> (46)
        on left: 38 39 40
        on right: 35 36 37 38 39
    Factor <node> (47)
        on left: 41 42 43 44
        on right: 38 39 40


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6

    $default  reduce using rule 2 (StmtList)

    Program             go to state 7
    StmtList            go to state 8
    FunctionDefinition  go to state 9
    FunctionCall        go to state 10
    Stmt                go to state 11
    Declaration         go to state 12
    Type                go to state 13
    Assignment          go to state 14
    Print               go to state 15


State 1

    6 FunctionCall: ID • LPAREN ArgList RPAREN
   30 Assignment: ID • ASSIGN Expr SEMICOLON
   31           | ID • ASSIGN FunctionCall SEMICOLON
   32           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   33           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall SEMICOLON

    LPAREN    shift, and go to state 16
    LBRACKET  shift, and go to state 17
    ASSIGN    shift, and go to state 18


State 2

   26 Type: INT •

    $default  reduce using rule 26 (Type)


State 3

   27 Type: FLOAT •

    $default  reduce using rule 27 (Type)


State 4

   28 Type: BOOL •

    $default  reduce using rule 28 (Type)


State 5

   29 Type: VOID •

    $default  reduce using rule 29 (Type)


State 6

   34 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 19


State 7

    0 $accept: Program • $end

    $end  shift, and go to state 20


State 8

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 9

    4 StmtList: FunctionDefinition • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6

    $default  reduce using rule 2 (StmtList)

    StmtList            go to state 21
    FunctionDefinition  go to state 9
    FunctionCall        go to state 10
    Stmt                go to state 11
    Declaration         go to state 12
    Type                go to state 13
    Assignment          go to state 14
    Print               go to state 15


State 10

   23 Stmt: FunctionCall •

    $default  reduce using rule 23 (Stmt)


State 11

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6

    $default  reduce using rule 2 (StmtList)

    StmtList            go to state 22
    FunctionDefinition  go to state 9
    FunctionCall        go to state 10
    Stmt                go to state 11
    Declaration         go to state 12
    Type                go to state 13
    Assignment          go to state 14
    Print               go to state 15


State 12

   20 Stmt: Declaration •

    $default  reduce using rule 20 (Stmt)


State 13

    5 FunctionDefinition: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   24 Declaration: Type • ID SEMICOLON
   25            | Type • ID LBRACKET Expr RBRACKET SEMICOLON

    ID  shift, and go to state 23


State 14

   21 Stmt: Assignment •

    $default  reduce using rule 21 (Stmt)


State 15

   22 Stmt: Print •

    $default  reduce using rule 22 (Stmt)


State 16

    6 FunctionCall: ID LPAREN • ArgList RPAREN

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    $default  reduce using rule 14 (ArgList)

    ArgList  go to state 27
    ArgTail  go to state 28
    Expr     go to state 29
    Term     go to state 30
    Factor   go to state 31


State 17

   32 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   33           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall SEMICOLON

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Expr    go to state 32
    Term    go to state 30
    Factor  go to state 31


State 18

   30 Assignment: ID ASSIGN • Expr SEMICOLON
   31           | ID ASSIGN • FunctionCall SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctionCall  go to state 34
    Expr          go to state 35
    Term          go to state 30
    Factor        go to state 31


State 19

   34 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Expr    go to state 36
    Term    go to state 30
    Factor  go to state 31


State 20

    0 $accept: Program $end •

    $default  accept


State 21

    4 StmtList: FunctionDefinition StmtList •

    $default  reduce using rule 4 (StmtList)


State 22

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 23

    5 FunctionDefinition: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   24 Declaration: Type ID • SEMICOLON
   25            | Type ID • LBRACKET Expr RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 37
    LPAREN     shift, and go to state 38
    LBRACKET   shift, and go to state 39


State 24

   42 Factor: ID •
   43       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 40

    $default  reduce using rule 42 (Factor)


State 25

   41 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Expr    go to state 41
    Term    go to state 30
    Factor  go to state 31


State 26

   44 Factor: NUMBER •

    $default  reduce using rule 44 (Factor)


State 27

    6 FunctionCall: ID LPAREN ArgList • RPAREN

    RPAREN  shift, and go to state 42


State 28

   15 ArgList: ArgTail •

    $default  reduce using rule 15 (ArgList)


State 29

   16 ArgTail: Expr •
   17        | Expr • COMMA ArgTail
   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term

    COMMA  shift, and go to state 43
    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45

    $default  reduce using rule 16 (ArgTail)


State 30

   37 Expr: Term •
   38 Term: Term • MULT Factor
   39     | Term • DIV Factor

    MULT  shift, and go to state 46
    DIV   shift, and go to state 47

    $default  reduce using rule 37 (Expr)


State 31

   40 Term: Factor •

    $default  reduce using rule 40 (Term)


State 32

   32 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   33           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall SEMICOLON
   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term

    RBRACKET  shift, and go to state 48
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45


State 33

    6 FunctionCall: ID • LPAREN ArgList RPAREN
   42 Factor: ID •
   43       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 16
    LBRACKET  shift, and go to state 40

    $default  reduce using rule 42 (Factor)


State 34

   31 Assignment: ID ASSIGN FunctionCall • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 35

   30 Assignment: ID ASSIGN Expr • SEMICOLON
   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 50
    PLUS       shift, and go to state 44
    MINUS      shift, and go to state 45


State 36

   34 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term

    RPAREN  shift, and go to state 51
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45


State 37

   24 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 24 (Declaration)


State 38

    5 FunctionDefinition: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 7 (ParamList)

    ParamList  go to state 52
    ParamTail  go to state 53
    Param      go to state 54
    Type       go to state 55


State 39

   25 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Expr    go to state 56
    Term    go to state 30
    Factor  go to state 31


State 40

   43 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Expr    go to state 57
    Term    go to state 30
    Factor  go to state 31


State 41

   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term
   41 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 58
    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45


State 42

    6 FunctionCall: ID LPAREN ArgList RPAREN •

    $default  reduce using rule 6 (FunctionCall)


State 43

   17 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    ArgTail  go to state 59
    Expr     go to state 29
    Term     go to state 30
    Factor   go to state 31


State 44

   35 Expr: Expr PLUS • Term

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Term    go to state 60
    Factor  go to state 31


State 45

   36 Expr: Expr MINUS • Term

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Term    go to state 61
    Factor  go to state 31


State 46

   38 Term: Term MULT • Factor

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Factor  go to state 62


State 47

   39 Term: Term DIV • Factor

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Factor  go to state 63


State 48

   32 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   33           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall SEMICOLON

    ASSIGN  shift, and go to state 64


State 49

   31 Assignment: ID ASSIGN FunctionCall SEMICOLON •

    $default  reduce using rule 31 (Assignment)


State 50

   30 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 30 (Assignment)


State 51

   34 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 65


State 52

    5 FunctionDefinition: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 66


State 53

    8 ParamList: ParamTail •

    $default  reduce using rule 8 (ParamList)


State 54

    9 ParamTail: Param •
   10          | Param • COMMA ParamTail

    COMMA  shift, and go to state 67

    $default  reduce using rule 9 (ParamTail)


State 55

   11 Param: Type • ID
   12      | Type • ID LBRACKET RBRACKET
   13      | Type • ID LBRACKET NUMBER RBRACKET

    ID  shift, and go to state 68


State 56

   25 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term

    RBRACKET  shift, and go to state 69
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45


State 57

   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term
   43 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 70
    PLUS      shift, and go to state 44
    MINUS     shift, and go to state 45


State 58

   41 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 41 (Factor)


State 59

   17 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 17 (ArgTail)


State 60

   35 Expr: Expr PLUS Term •
   38 Term: Term • MULT Factor
   39     | Term • DIV Factor

    MULT  shift, and go to state 46
    DIV   shift, and go to state 47

    $default  reduce using rule 35 (Expr)


State 61

   36 Expr: Expr MINUS Term •
   38 Term: Term • MULT Factor
   39     | Term • DIV Factor

    MULT  shift, and go to state 46
    DIV   shift, and go to state 47

    $default  reduce using rule 36 (Expr)


State 62

   38 Term: Term MULT Factor •

    $default  reduce using rule 38 (Term)


State 63

   39 Term: Term DIV Factor •

    $default  reduce using rule 39 (Term)


State 64

   32 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   33           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctionCall  go to state 71
    Expr          go to state 72
    Term          go to state 30
    Factor        go to state 31


State 65

   34 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 34 (Print)


State 66

    5 FunctionDefinition: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 73


State 67

   10 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 74
    Param      go to state 54
    Type       go to state 55


State 68

   11 Param: Type ID •
   12      | Type ID • LBRACKET RBRACKET
   13      | Type ID • LBRACKET NUMBER RBRACKET

    LBRACKET  shift, and go to state 75

    $default  reduce using rule 11 (Param)


State 69

   25 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 70

   43 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 43 (Factor)


State 71

   33 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall • SEMICOLON

    SEMICOLON  shift, and go to state 77


State 72

   32 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 78
    PLUS       shift, and go to state 44
    MINUS      shift, and go to state 45


State 73

    5 FunctionDefinition: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6

    $default  reduce using rule 2 (StmtList)

    StmtList            go to state 79
    FunctionDefinition  go to state 9
    FunctionCall        go to state 10
    Block               go to state 80
    Stmt                go to state 11
    Declaration         go to state 12
    Type                go to state 13
    Assignment          go to state 14
    Print               go to state 15


State 74

   10 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 10 (ParamTail)


State 75

   12 Param: Type ID LBRACKET • RBRACKET
   13      | Type ID LBRACKET • NUMBER RBRACKET

    RBRACKET  shift, and go to state 81
    NUMBER    shift, and go to state 82


State 76

   25 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 25 (Declaration)


State 77

   33 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall SEMICOLON •

    $default  reduce using rule 33 (Assignment)


State 78

   32 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 32 (Assignment)


State 79

   18 Block: StmtList • RETURN Expr SEMICOLON
   19      | StmtList •

    RETURN  shift, and go to state 83

    $default  reduce using rule 19 (Block)


State 80

    5 FunctionDefinition: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 84


State 81

   12 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 12 (Param)


State 82

   13 Param: Type ID LBRACKET NUMBER • RBRACKET

    RBRACKET  shift, and go to state 85


State 83

   18 Block: StmtList RETURN • Expr SEMICOLON

    ID      shift, and go to state 24
    LPAREN  shift, and go to state 25
    NUMBER  shift, and go to state 26

    Expr    go to state 86
    Term    go to state 30
    Factor  go to state 31


State 84

    5 FunctionDefinition: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 5 (FunctionDefinition)


State 85

   13 Param: Type ID LBRACKET NUMBER RBRACKET •

    $default  reduce using rule 13 (Param)


State 86

   18 Block: StmtList RETURN Expr • SEMICOLON
   35 Expr: Expr • PLUS Term
   36     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 87
    PLUS       shift, and go to state 44
    MINUS      shift, and go to state 45


State 87

   18 Block: StmtList RETURN Expr SEMICOLON •

    $default  reduce using rule 18 (Block)
