Nonterminals useless in grammar

    IfBlock
    ElseIfStmt
    ElseStmt


Terminals unused in grammar

    TRUE
    FALSE
    ELSE
    ELSE_IF
    WHILE
    AND
    OR


Rules useless in grammar

   63 IfBlock: IfStmt ElseIfStmt ElseStmt

   64 ElseIfStmt: ε
   65           | ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

   66 ElseStmt: ε
   67         | ELSE LBRACE Block RBRACE


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList

    4 Stmt: Declaration
    5     | DeclarationAssignment
    6     | Assignment
    7     | Print
    8     | FunctionCall
    9     | FunctionDeclaration
   10     | IfStmt

   11 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE

   12 Condition: Expr SIGN Expr

   13 SIGN: GREATER_THAN
   14     | LESS_THAN
   15     | EQUAL_TO
   16     | GREATER_THAN_EQUAL_TO
   17     | LESS_THAN_EQUAL_TO

   18 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

   19 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON

   20 ParamList: ε
   21          | ParamTail

   22 ParamTail: Param
   23          | Param COMMA ParamTail

   24 Param: Type ID
   25      | Type ID LBRACKET RBRACKET

   26 ArgList: ε
   27        | ArgTail

   28 ArgTail: Expr
   29        | Expr COMMA ArgTail

   30 Block: BlockStmtList ReturnStmt
   31      | BlockStmtList

   32 BlockStmtList: ε
   33              | BlockStmt BlockStmtList

   34 BlockStmt: Declaration
   35          | DeclarationAssignment
   36          | Assignment
   37          | Print
   38          | FunctionCall
   39          | IfStmt

   40 ReturnStmt: RETURN Expr SEMICOLON

   41 Declaration: Type ID SEMICOLON
   42            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   43 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON

   44 Type: INT
   45     | FLOAT
   46     | BOOL
   47     | VOID

   48 Assignment: ID ASSIGN Expr SEMICOLON
   49           | ID ASSIGN FunctionCall
   50           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   51           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall

   52 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   53 Expr: Expr PLUS Term
   54     | Expr MINUS Term
   55     | Term

   56 Term: Term MULT Factor
   57     | Term DIV Factor
   58     | Factor

   59 Factor: LPAREN Expr RPAREN
   60       | ID
   61       | ID LBRACKET Expr RBRACKET
   62       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 18 19 24 25 41 42 43 48 49 50 51 60 61
    INT <string> (259) 44
    FLOAT <string> (260) 45
    BOOL <string> (261) 46
    VOID <string> (262) 47
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 52
    IF <string> (266) 11
    ELSE <string> (267)
    ELSE_IF <string> (268)
    WHILE <string> (269)
    RETURN <string> (270) 40
    SEMICOLON <character> (271) 19 40 41 42 43 48 50 52
    COMMA <character> (272) 23 29
    LPAREN <character> (273) 11 18 19 52 59
    RPAREN <character> (274) 11 18 19 52 59
    LBRACE <character> (275) 11 18
    RBRACE <character> (276) 11 18
    LBRACKET <character> (277) 25 42 50 51 61
    RBRACKET <character> (278) 25 42 50 51 61
    ASSIGN <op> (279) 43 48 49 50 51
    PLUS <op> (280) 53
    MINUS <op> (281) 54
    MULT <op> (282) 56
    DIV <op> (283) 57
    GREATER_THAN <stringOp> (284) 13
    LESS_THAN <stringOp> (285) 14
    EQUAL_TO <stringOp> (286) 15
    GREATER_THAN_EQUAL_TO <stringOp> (287) 16
    LESS_THAN_EQUAL_TO <stringOp> (288) 17
    AND <stringOp> (289)
    OR <stringOp> (290)
    NUMBER <number> (291) 62


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    Program <node> (38)
        on left: 1
        on right: 0
    StmtList <node> (39)
        on left: 2 3
        on right: 1 3
    Stmt <node> (40)
        on left: 4 5 6 7 8 9 10
        on right: 3
    IfStmt <node> (41)
        on left: 11
        on right: 10 39
    Condition <node> (42)
        on left: 12
        on right: 11
    SIGN <node> (43)
        on left: 13 14 15 16 17
        on right: 12
    FunctionDeclaration <node> (44)
        on left: 18
        on right: 9
    FunctionCall <node> (45)
        on left: 19
        on right: 8 38 49 51
    ParamList <node> (46)
        on left: 20 21
        on right: 18
    ParamTail <node> (47)
        on left: 22 23
        on right: 21 23
    Param <node> (48)
        on left: 24 25
        on right: 22 23
    ArgList <node> (49)
        on left: 26 27
        on right: 19
    ArgTail <node> (50)
        on left: 28 29
        on right: 27 29
    Block <node> (51)
        on left: 30 31
        on right: 11 18
    BlockStmtList <node> (52)
        on left: 32 33
        on right: 30 31 33
    BlockStmt <node> (53)
        on left: 34 35 36 37 38 39
        on right: 33
    ReturnStmt <node> (54)
        on left: 40
        on right: 30
    Declaration <node> (55)
        on left: 41 42
        on right: 4 34
    DeclarationAssignment <node> (56)
        on left: 43
        on right: 5 35
    Type <node> (57)
        on left: 44 45 46 47
        on right: 18 24 25 41 42 43
    Assignment <node> (58)
        on left: 48 49 50 51
        on right: 6 36
    Print <node> (59)
        on left: 52
        on right: 7 37
    Expr <node> (60)
        on left: 53 54 55
        on right: 12 28 29 40 42 43 48 50 51 52 53 54 59 61
    Term <node> (61)
        on left: 56 57 58
        on right: 53 54 55 56 57
    Factor <node> (62)
        on left: 59 60 61 62
        on right: 56 57 58


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    Program                go to state 8
    StmtList               go to state 9
    Stmt                   go to state 10
    IfStmt                 go to state 11
    FunctionDeclaration    go to state 12
    FunctionCall           go to state 13
    Declaration            go to state 14
    DeclarationAssignment  go to state 15
    Type                   go to state 16
    Assignment             go to state 17
    Print                  go to state 18


State 1

   19 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   48 Assignment: ID • ASSIGN Expr SEMICOLON
   49           | ID • ASSIGN FunctionCall
   50           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   51           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall

    LPAREN    shift, and go to state 19
    LBRACKET  shift, and go to state 20
    ASSIGN    shift, and go to state 21


State 2

   44 Type: INT •

    $default  reduce using rule 44 (Type)


State 3

   45 Type: FLOAT •

    $default  reduce using rule 45 (Type)


State 4

   46 Type: BOOL •

    $default  reduce using rule 46 (Type)


State 5

   47 Type: VOID •

    $default  reduce using rule 47 (Type)


State 6

   52 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 22


State 7

   11 IfStmt: IF • LPAREN Condition RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 23


State 8

    0 $accept: Program • $end

    $end  shift, and go to state 24


State 9

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 10

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    StmtList               go to state 25
    Stmt                   go to state 10
    IfStmt                 go to state 11
    FunctionDeclaration    go to state 12
    FunctionCall           go to state 13
    Declaration            go to state 14
    DeclarationAssignment  go to state 15
    Type                   go to state 16
    Assignment             go to state 17
    Print                  go to state 18


State 11

   10 Stmt: IfStmt •

    $default  reduce using rule 10 (Stmt)


State 12

    9 Stmt: FunctionDeclaration •

    $default  reduce using rule 9 (Stmt)


State 13

    8 Stmt: FunctionCall •

    $default  reduce using rule 8 (Stmt)


State 14

    4 Stmt: Declaration •

    $default  reduce using rule 4 (Stmt)


State 15

    5 Stmt: DeclarationAssignment •

    $default  reduce using rule 5 (Stmt)


State 16

   18 FunctionDeclaration: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   41 Declaration: Type • ID SEMICOLON
   42            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   43 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 26


State 17

    6 Stmt: Assignment •

    $default  reduce using rule 6 (Stmt)


State 18

    7 Stmt: Print •

    $default  reduce using rule 7 (Stmt)


State 19

   19 FunctionCall: ID LPAREN • ArgList RPAREN SEMICOLON

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    $default  reduce using rule 26 (ArgList)

    ArgList  go to state 30
    ArgTail  go to state 31
    Expr     go to state 32
    Term     go to state 33
    Factor   go to state 34


State 20

   50 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   51           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 35
    Term    go to state 33
    Factor  go to state 34


State 21

   48 Assignment: ID ASSIGN • Expr SEMICOLON
   49           | ID ASSIGN • FunctionCall

    ID      shift, and go to state 36
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    FunctionCall  go to state 37
    Expr          go to state 38
    Term          go to state 33
    Factor        go to state 34


State 22

   52 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 39
    Term    go to state 33
    Factor  go to state 34


State 23

   11 IfStmt: IF LPAREN • Condition RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Condition  go to state 40
    Expr       go to state 41
    Term       go to state 33
    Factor     go to state 34


State 24

    0 $accept: Program $end •

    $default  accept


State 25

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 26

   18 FunctionDeclaration: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   41 Declaration: Type ID • SEMICOLON
   42            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   43 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 42
    LPAREN     shift, and go to state 43
    LBRACKET   shift, and go to state 44
    ASSIGN     shift, and go to state 45


State 27

   60 Factor: ID •
   61       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 46

    $default  reduce using rule 60 (Factor)


State 28

   59 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 47
    Term    go to state 33
    Factor  go to state 34


State 29

   62 Factor: NUMBER •

    $default  reduce using rule 62 (Factor)


State 30

   19 FunctionCall: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 48


State 31

   27 ArgList: ArgTail •

    $default  reduce using rule 27 (ArgList)


State 32

   28 ArgTail: Expr •
   29        | Expr • COMMA ArgTail
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    COMMA  shift, and go to state 49
    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 28 (ArgTail)


State 33

   55 Expr: Term •
   56 Term: Term • MULT Factor
   57     | Term • DIV Factor

    MULT  shift, and go to state 52
    DIV   shift, and go to state 53

    $default  reduce using rule 55 (Expr)


State 34

   58 Term: Factor •

    $default  reduce using rule 58 (Term)


State 35

   50 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   51           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    RBRACKET  shift, and go to state 54
    PLUS      shift, and go to state 50
    MINUS     shift, and go to state 51


State 36

   19 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   60 Factor: ID •
   61       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 19
    LBRACKET  shift, and go to state 46

    $default  reduce using rule 60 (Factor)


State 37

   49 Assignment: ID ASSIGN FunctionCall •

    $default  reduce using rule 49 (Assignment)


State 38

   48 Assignment: ID ASSIGN Expr • SEMICOLON
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 55
    PLUS       shift, and go to state 50
    MINUS      shift, and go to state 51


State 39

   52 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    RPAREN  shift, and go to state 56
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51


State 40

   11 IfStmt: IF LPAREN Condition • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 57


State 41

   12 Condition: Expr • SIGN Expr
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    PLUS                   shift, and go to state 50
    MINUS                  shift, and go to state 51
    GREATER_THAN           shift, and go to state 58
    LESS_THAN              shift, and go to state 59
    EQUAL_TO               shift, and go to state 60
    GREATER_THAN_EQUAL_TO  shift, and go to state 61
    LESS_THAN_EQUAL_TO     shift, and go to state 62

    SIGN  go to state 63


State 42

   41 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 41 (Declaration)


State 43

   18 FunctionDeclaration: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 20 (ParamList)

    ParamList  go to state 64
    ParamTail  go to state 65
    Param      go to state 66
    Type       go to state 67


State 44

   42 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 68
    Term    go to state 33
    Factor  go to state 34


State 45

   43 DeclarationAssignment: Type ID ASSIGN • Expr SEMICOLON

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 69
    Term    go to state 33
    Factor  go to state 34


State 46

   61 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 70
    Term    go to state 33
    Factor  go to state 34


State 47

   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term
   59 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 71
    PLUS    shift, and go to state 50
    MINUS   shift, and go to state 51


State 48

   19 FunctionCall: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 49

   29 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    ArgTail  go to state 73
    Expr     go to state 32
    Term     go to state 33
    Factor   go to state 34


State 50

   53 Expr: Expr PLUS • Term

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Term    go to state 74
    Factor  go to state 34


State 51

   54 Expr: Expr MINUS • Term

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Term    go to state 75
    Factor  go to state 34


State 52

   56 Term: Term MULT • Factor

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Factor  go to state 76


State 53

   57 Term: Term DIV • Factor

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Factor  go to state 77


State 54

   50 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   51           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall

    ASSIGN  shift, and go to state 78


State 55

   48 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 48 (Assignment)


State 56

   52 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 57

   11 IfStmt: IF LPAREN Condition RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 80


State 58

   13 SIGN: GREATER_THAN •

    $default  reduce using rule 13 (SIGN)


State 59

   14 SIGN: LESS_THAN •

    $default  reduce using rule 14 (SIGN)


State 60

   15 SIGN: EQUAL_TO •

    $default  reduce using rule 15 (SIGN)


State 61

   16 SIGN: GREATER_THAN_EQUAL_TO •

    $default  reduce using rule 16 (SIGN)


State 62

   17 SIGN: LESS_THAN_EQUAL_TO •

    $default  reduce using rule 17 (SIGN)


State 63

   12 Condition: Expr SIGN • Expr

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 81
    Term    go to state 33
    Factor  go to state 34


State 64

   18 FunctionDeclaration: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 82


State 65

   21 ParamList: ParamTail •

    $default  reduce using rule 21 (ParamList)


State 66

   22 ParamTail: Param •
   23          | Param • COMMA ParamTail

    COMMA  shift, and go to state 83

    $default  reduce using rule 22 (ParamTail)


State 67

   24 Param: Type • ID
   25      | Type • ID LBRACKET RBRACKET

    ID  shift, and go to state 84


State 68

   42 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    RBRACKET  shift, and go to state 85
    PLUS      shift, and go to state 50
    MINUS     shift, and go to state 51


State 69

   43 DeclarationAssignment: Type ID ASSIGN Expr • SEMICOLON
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 86
    PLUS       shift, and go to state 50
    MINUS      shift, and go to state 51


State 70

   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term
   61 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 87
    PLUS      shift, and go to state 50
    MINUS     shift, and go to state 51


State 71

   59 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 59 (Factor)


State 72

   19 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 19 (FunctionCall)


State 73

   29 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 29 (ArgTail)


State 74

   53 Expr: Expr PLUS Term •
   56 Term: Term • MULT Factor
   57     | Term • DIV Factor

    MULT  shift, and go to state 52
    DIV   shift, and go to state 53

    $default  reduce using rule 53 (Expr)


State 75

   54 Expr: Expr MINUS Term •
   56 Term: Term • MULT Factor
   57     | Term • DIV Factor

    MULT  shift, and go to state 52
    DIV   shift, and go to state 53

    $default  reduce using rule 54 (Expr)


State 76

   56 Term: Term MULT Factor •

    $default  reduce using rule 56 (Term)


State 77

   57 Term: Term DIV Factor •

    $default  reduce using rule 57 (Term)


State 78

   50 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   51           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall

    ID      shift, and go to state 36
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    FunctionCall  go to state 88
    Expr          go to state 89
    Term          go to state 33
    Factor        go to state 34


State 79

   52 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 52 (Print)


State 80

   11 IfStmt: IF LPAREN Condition RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 32 (BlockStmtList)

    IfStmt                 go to state 90
    FunctionCall           go to state 91
    Block                  go to state 92
    BlockStmtList          go to state 93
    BlockStmt              go to state 94
    Declaration            go to state 95
    DeclarationAssignment  go to state 96
    Type                   go to state 97
    Assignment             go to state 98
    Print                  go to state 99


State 81

   12 Condition: Expr SIGN Expr •
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    PLUS   shift, and go to state 50
    MINUS  shift, and go to state 51

    $default  reduce using rule 12 (Condition)


State 82

   18 FunctionDeclaration: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 100


State 83

   23 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 101
    Param      go to state 66
    Type       go to state 67


State 84

   24 Param: Type ID •
   25      | Type ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 102

    $default  reduce using rule 24 (Param)


State 85

   42 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 86

   43 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 43 (DeclarationAssignment)


State 87

   61 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 61 (Factor)


State 88

   51 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall •

    $default  reduce using rule 51 (Assignment)


State 89

   50 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 104
    PLUS       shift, and go to state 50
    MINUS      shift, and go to state 51


State 90

   39 BlockStmt: IfStmt •

    $default  reduce using rule 39 (BlockStmt)


State 91

   38 BlockStmt: FunctionCall •

    $default  reduce using rule 38 (BlockStmt)


State 92

   11 IfStmt: IF LPAREN Condition RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 105


State 93

   30 Block: BlockStmtList • ReturnStmt
   31      | BlockStmtList •

    RETURN  shift, and go to state 106

    $default  reduce using rule 31 (Block)

    ReturnStmt  go to state 107


State 94

   33 BlockStmtList: BlockStmt • BlockStmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 32 (BlockStmtList)

    IfStmt                 go to state 90
    FunctionCall           go to state 91
    BlockStmtList          go to state 108
    BlockStmt              go to state 94
    Declaration            go to state 95
    DeclarationAssignment  go to state 96
    Type                   go to state 97
    Assignment             go to state 98
    Print                  go to state 99


State 95

   34 BlockStmt: Declaration •

    $default  reduce using rule 34 (BlockStmt)


State 96

   35 BlockStmt: DeclarationAssignment •

    $default  reduce using rule 35 (BlockStmt)


State 97

   41 Declaration: Type • ID SEMICOLON
   42            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   43 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 109


State 98

   36 BlockStmt: Assignment •

    $default  reduce using rule 36 (BlockStmt)


State 99

   37 BlockStmt: Print •

    $default  reduce using rule 37 (BlockStmt)


State 100

   18 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 32 (BlockStmtList)

    IfStmt                 go to state 90
    FunctionCall           go to state 91
    Block                  go to state 110
    BlockStmtList          go to state 93
    BlockStmt              go to state 94
    Declaration            go to state 95
    DeclarationAssignment  go to state 96
    Type                   go to state 97
    Assignment             go to state 98
    Print                  go to state 99


State 101

   23 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 23 (ParamTail)


State 102

   25 Param: Type ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 111


State 103

   42 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 42 (Declaration)


State 104

   50 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 50 (Assignment)


State 105

   11 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 11 (IfStmt)


State 106

   40 ReturnStmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 27
    LPAREN  shift, and go to state 28
    NUMBER  shift, and go to state 29

    Expr    go to state 112
    Term    go to state 33
    Factor  go to state 34


State 107

   30 Block: BlockStmtList ReturnStmt •

    $default  reduce using rule 30 (Block)


State 108

   33 BlockStmtList: BlockStmt BlockStmtList •

    $default  reduce using rule 33 (BlockStmtList)


State 109

   41 Declaration: Type ID • SEMICOLON
   42            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   43 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 42
    LBRACKET   shift, and go to state 44
    ASSIGN     shift, and go to state 45


State 110

   18 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 113


State 111

   25 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 25 (Param)


State 112

   40 ReturnStmt: RETURN Expr • SEMICOLON
   53 Expr: Expr • PLUS Term
   54     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 114
    PLUS       shift, and go to state 50
    MINUS      shift, and go to state 51


State 113

   18 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 18 (FunctionDeclaration)


State 114

   40 ReturnStmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 40 (ReturnStmt)
