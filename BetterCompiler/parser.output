Terminals unused in grammar

    TRUE
    FALSE


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList

    4 Stmt: Declaration
    5     | DeclarationAssignment
    6     | Assignment
    7     | Print
    8     | FunctionCall
    9     | FunctionDeclaration
   10     | IfBlock
   11     | WhileStmt

   12 IfBlock: IfStmt ElseIfStmt ElseStmt

   13 IfStmt: IF LPAREN ConditionList RPAREN LBRACE Block RBRACE

   14 ElseIfStmt: ε
   15           | ELSE_IF LPAREN ConditionList RPAREN LBRACE Block RBRACE ElseIfStmt

   16 ElseStmt: ε
   17         | ELSE LBRACE Block RBRACE

   18 WhileStmt: WHILE LPAREN ConditionList RPAREN LBRACE Block RBRACE

   19 ConditionList: Condition ConditionTail

   20 Condition: Expr SIGN Expr

   21 ConditionTail: ε
   22              | CONJUNCTION Condition ConditionTail

   23 SIGN: GREATER_THAN
   24     | LESS_THAN
   25     | EQUAL_TO
   26     | GREATER_THAN_EQUAL_TO
   27     | LESS_THAN_EQUAL_TO
   28     | NOT_EQUAL_TO

   29 CONJUNCTION: AND
   30            | OR

   31 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

   32 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON

   33 ParamList: ε
   34          | ParamTail

   35 ParamTail: Param
   36          | Param COMMA ParamTail

   37 Param: Type ID
   38      | Type ID LBRACKET RBRACKET

   39 ArgList: ε
   40        | ArgTail

   41 ArgTail: Expr
   42        | Expr COMMA ArgTail

   43 Block: BlockStmtList ReturnStmt
   44      | BlockStmtList

   45 BlockStmtList: ε
   46              | BlockStmt BlockStmtList

   47 BlockStmt: Declaration
   48          | DeclarationAssignment
   49          | Assignment
   50          | Print
   51          | FunctionCall
   52          | IfBlock

   53 ReturnStmt: RETURN Expr SEMICOLON

   54 Declaration: Type ID SEMICOLON
   55            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   56 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON
   57                      | Type ID ASSIGN FunctionCall

   58 Type: INT
   59     | FLOAT
   60     | BOOL
   61     | VOID

   62 Assignment: ID ASSIGN Expr SEMICOLON
   63           | ID ASSIGN FunctionCall
   64           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   65           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall

   66 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   67 Expr: Expr PLUS Term
   68     | Expr MINUS Term
   69     | Term

   70 Term: Term MULT Factor
   71     | Term DIV Factor
   72     | Factor

   73 Factor: LPAREN Expr RPAREN
   74       | ID
   75       | ID LBRACKET Expr RBRACKET
   76       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 31 32 37 38 54 55 56 57 62 63 64 65 74 75
    INT <string> (259) 58
    FLOAT <string> (260) 59
    BOOL <string> (261) 60
    VOID <string> (262) 61
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 66
    IF <string> (266) 13
    ELSE <string> (267) 17
    ELSE_IF <string> (268) 15
    WHILE <string> (269) 18
    RETURN <string> (270) 53
    SEMICOLON <character> (271) 32 53 54 55 56 62 64 66
    COMMA <character> (272) 36 42
    LPAREN <character> (273) 13 15 18 31 32 66 73
    RPAREN <character> (274) 13 15 18 31 32 66 73
    LBRACE <character> (275) 13 15 17 18 31
    RBRACE <character> (276) 13 15 17 18 31
    LBRACKET <character> (277) 38 55 64 65 75
    RBRACKET <character> (278) 38 55 64 65 75
    ASSIGN <op> (279) 56 57 62 63 64 65
    PLUS <op> (280) 67
    MINUS <op> (281) 68
    MULT <op> (282) 70
    DIV <op> (283) 71
    GREATER_THAN <stringOp> (284) 23
    LESS_THAN <stringOp> (285) 24
    EQUAL_TO <stringOp> (286) 25
    GREATER_THAN_EQUAL_TO <stringOp> (287) 26
    LESS_THAN_EQUAL_TO <stringOp> (288) 27
    AND <stringOp> (289) 29
    OR <stringOp> (290) 30
    NOT_EQUAL_TO <stringOp> (291) 28
    NUMBER <number> (292) 76


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    Program <node> (39)
        on left: 1
        on right: 0
    StmtList <node> (40)
        on left: 2 3
        on right: 1 3
    Stmt <node> (41)
        on left: 4 5 6 7 8 9 10 11
        on right: 3
    IfBlock <node> (42)
        on left: 12
        on right: 10 52
    IfStmt <node> (43)
        on left: 13
        on right: 12
    ElseIfStmt <node> (44)
        on left: 14 15
        on right: 12 15
    ElseStmt <node> (45)
        on left: 16 17
        on right: 12
    WhileStmt <node> (46)
        on left: 18
        on right: 11
    ConditionList <node> (47)
        on left: 19
        on right: 13 15 18
    Condition <node> (48)
        on left: 20
        on right: 19 22
    ConditionTail <node> (49)
        on left: 21 22
        on right: 19 22
    SIGN <node> (50)
        on left: 23 24 25 26 27 28
        on right: 20
    CONJUNCTION <node> (51)
        on left: 29 30
        on right: 22
    FunctionDeclaration <node> (52)
        on left: 31
        on right: 9
    FunctionCall <node> (53)
        on left: 32
        on right: 8 51 57 63 65
    ParamList <node> (54)
        on left: 33 34
        on right: 31
    ParamTail <node> (55)
        on left: 35 36
        on right: 34 36
    Param <node> (56)
        on left: 37 38
        on right: 35 36
    ArgList <node> (57)
        on left: 39 40
        on right: 32
    ArgTail <node> (58)
        on left: 41 42
        on right: 40 42
    Block <node> (59)
        on left: 43 44
        on right: 13 15 17 18 31
    BlockStmtList <node> (60)
        on left: 45 46
        on right: 43 44 46
    BlockStmt <node> (61)
        on left: 47 48 49 50 51 52
        on right: 46
    ReturnStmt <node> (62)
        on left: 53
        on right: 43
    Declaration <node> (63)
        on left: 54 55
        on right: 4 47
    DeclarationAssignment <node> (64)
        on left: 56 57
        on right: 5 48
    Type <node> (65)
        on left: 58 59 60 61
        on right: 31 37 38 54 55 56 57
    Assignment <node> (66)
        on left: 62 63 64 65
        on right: 6 49
    Print <node> (67)
        on left: 66
        on right: 7 50
    Expr <node> (68)
        on left: 67 68 69
        on right: 20 41 42 53 55 56 62 64 65 66 67 68 73 75
    Term <node> (69)
        on left: 70 71 72
        on right: 67 68 69 70 71
    Factor <node> (70)
        on left: 73 74 75 76
        on right: 70 71 72


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    $default  reduce using rule 2 (StmtList)

    Program                go to state 9
    StmtList               go to state 10
    Stmt                   go to state 11
    IfBlock                go to state 12
    IfStmt                 go to state 13
    WhileStmt              go to state 14
    FunctionDeclaration    go to state 15
    FunctionCall           go to state 16
    Declaration            go to state 17
    DeclarationAssignment  go to state 18
    Type                   go to state 19
    Assignment             go to state 20
    Print                  go to state 21


State 1

   32 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   62 Assignment: ID • ASSIGN Expr SEMICOLON
   63           | ID • ASSIGN FunctionCall
   64           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   65           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall

    LPAREN    shift, and go to state 22
    LBRACKET  shift, and go to state 23
    ASSIGN    shift, and go to state 24


State 2

   58 Type: INT •

    $default  reduce using rule 58 (Type)


State 3

   59 Type: FLOAT •

    $default  reduce using rule 59 (Type)


State 4

   60 Type: BOOL •

    $default  reduce using rule 60 (Type)


State 5

   61 Type: VOID •

    $default  reduce using rule 61 (Type)


State 6

   66 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 25


State 7

   13 IfStmt: IF • LPAREN ConditionList RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 26


State 8

   18 WhileStmt: WHILE • LPAREN ConditionList RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 27


State 9

    0 $accept: Program • $end

    $end  shift, and go to state 28


State 10

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 11

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    $default  reduce using rule 2 (StmtList)

    StmtList               go to state 29
    Stmt                   go to state 11
    IfBlock                go to state 12
    IfStmt                 go to state 13
    WhileStmt              go to state 14
    FunctionDeclaration    go to state 15
    FunctionCall           go to state 16
    Declaration            go to state 17
    DeclarationAssignment  go to state 18
    Type                   go to state 19
    Assignment             go to state 20
    Print                  go to state 21


State 12

   10 Stmt: IfBlock •

    $default  reduce using rule 10 (Stmt)


State 13

   12 IfBlock: IfStmt • ElseIfStmt ElseStmt

    ELSE_IF  shift, and go to state 30

    $default  reduce using rule 14 (ElseIfStmt)

    ElseIfStmt  go to state 31


State 14

   11 Stmt: WhileStmt •

    $default  reduce using rule 11 (Stmt)


State 15

    9 Stmt: FunctionDeclaration •

    $default  reduce using rule 9 (Stmt)


State 16

    8 Stmt: FunctionCall •

    $default  reduce using rule 8 (Stmt)


State 17

    4 Stmt: Declaration •

    $default  reduce using rule 4 (Stmt)


State 18

    5 Stmt: DeclarationAssignment •

    $default  reduce using rule 5 (Stmt)


State 19

   31 FunctionDeclaration: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   54 Declaration: Type • ID SEMICOLON
   55            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   56 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON
   57                      | Type • ID ASSIGN FunctionCall

    ID  shift, and go to state 32


State 20

    6 Stmt: Assignment •

    $default  reduce using rule 6 (Stmt)


State 21

    7 Stmt: Print •

    $default  reduce using rule 7 (Stmt)


State 22

   32 FunctionCall: ID LPAREN • ArgList RPAREN SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    $default  reduce using rule 39 (ArgList)

    ArgList  go to state 36
    ArgTail  go to state 37
    Expr     go to state 38
    Term     go to state 39
    Factor   go to state 40


State 23

   64 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   65           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 41
    Term    go to state 39
    Factor  go to state 40


State 24

   62 Assignment: ID ASSIGN • Expr SEMICOLON
   63           | ID ASSIGN • FunctionCall

    ID      shift, and go to state 42
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    FunctionCall  go to state 43
    Expr          go to state 44
    Term          go to state 39
    Factor        go to state 40


State 25

   66 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 45
    Term    go to state 39
    Factor  go to state 40


State 26

   13 IfStmt: IF LPAREN • ConditionList RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    ConditionList  go to state 46
    Condition      go to state 47
    Expr           go to state 48
    Term           go to state 39
    Factor         go to state 40


State 27

   18 WhileStmt: WHILE LPAREN • ConditionList RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    ConditionList  go to state 49
    Condition      go to state 47
    Expr           go to state 48
    Term           go to state 39
    Factor         go to state 40


State 28

    0 $accept: Program $end •

    $default  accept


State 29

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 30

   15 ElseIfStmt: ELSE_IF • LPAREN ConditionList RPAREN LBRACE Block RBRACE ElseIfStmt

    LPAREN  shift, and go to state 50


State 31

   12 IfBlock: IfStmt ElseIfStmt • ElseStmt

    ELSE  shift, and go to state 51

    $default  reduce using rule 16 (ElseStmt)

    ElseStmt  go to state 52


State 32

   31 FunctionDeclaration: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   54 Declaration: Type ID • SEMICOLON
   55            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   56 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON
   57                      | Type ID • ASSIGN FunctionCall

    SEMICOLON  shift, and go to state 53
    LPAREN     shift, and go to state 54
    LBRACKET   shift, and go to state 55
    ASSIGN     shift, and go to state 56


State 33

   74 Factor: ID •
   75       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 57

    $default  reduce using rule 74 (Factor)


State 34

   73 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 58
    Term    go to state 39
    Factor  go to state 40


State 35

   76 Factor: NUMBER •

    $default  reduce using rule 76 (Factor)


State 36

   32 FunctionCall: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 59


State 37

   40 ArgList: ArgTail •

    $default  reduce using rule 40 (ArgList)


State 38

   41 ArgTail: Expr •
   42        | Expr • COMMA ArgTail
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    COMMA  shift, and go to state 60
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 41 (ArgTail)


State 39

   69 Expr: Term •
   70 Term: Term • MULT Factor
   71     | Term • DIV Factor

    MULT  shift, and go to state 63
    DIV   shift, and go to state 64

    $default  reduce using rule 69 (Expr)


State 40

   72 Term: Factor •

    $default  reduce using rule 72 (Term)


State 41

   64 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   65           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    RBRACKET  shift, and go to state 65
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62


State 42

   32 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   74 Factor: ID •
   75       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 22
    LBRACKET  shift, and go to state 57

    $default  reduce using rule 74 (Factor)


State 43

   63 Assignment: ID ASSIGN FunctionCall •

    $default  reduce using rule 63 (Assignment)


State 44

   62 Assignment: ID ASSIGN Expr • SEMICOLON
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62


State 45

   66 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    RPAREN  shift, and go to state 67
    PLUS    shift, and go to state 61
    MINUS   shift, and go to state 62


State 46

   13 IfStmt: IF LPAREN ConditionList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 68


State 47

   19 ConditionList: Condition • ConditionTail

    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 21 (ConditionTail)

    ConditionTail  go to state 71
    CONJUNCTION    go to state 72


State 48

   20 Condition: Expr • SIGN Expr
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    PLUS                   shift, and go to state 61
    MINUS                  shift, and go to state 62
    GREATER_THAN           shift, and go to state 73
    LESS_THAN              shift, and go to state 74
    EQUAL_TO               shift, and go to state 75
    GREATER_THAN_EQUAL_TO  shift, and go to state 76
    LESS_THAN_EQUAL_TO     shift, and go to state 77
    NOT_EQUAL_TO           shift, and go to state 78

    SIGN  go to state 79


State 49

   18 WhileStmt: WHILE LPAREN ConditionList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 80


State 50

   15 ElseIfStmt: ELSE_IF LPAREN • ConditionList RPAREN LBRACE Block RBRACE ElseIfStmt

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    ConditionList  go to state 81
    Condition      go to state 47
    Expr           go to state 48
    Term           go to state 39
    Factor         go to state 40


State 51

   17 ElseStmt: ELSE • LBRACE Block RBRACE

    LBRACE  shift, and go to state 82


State 52

   12 IfBlock: IfStmt ElseIfStmt ElseStmt •

    $default  reduce using rule 12 (IfBlock)


State 53

   54 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 54 (Declaration)


State 54

   31 FunctionDeclaration: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 33 (ParamList)

    ParamList  go to state 83
    ParamTail  go to state 84
    Param      go to state 85
    Type       go to state 86


State 55

   55 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 87
    Term    go to state 39
    Factor  go to state 40


State 56

   56 DeclarationAssignment: Type ID ASSIGN • Expr SEMICOLON
   57                      | Type ID ASSIGN • FunctionCall

    ID      shift, and go to state 42
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    FunctionCall  go to state 88
    Expr          go to state 89
    Term          go to state 39
    Factor        go to state 40


State 57

   75 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 90
    Term    go to state 39
    Factor  go to state 40


State 58

   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term
   73 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 91
    PLUS    shift, and go to state 61
    MINUS   shift, and go to state 62


State 59

   32 FunctionCall: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 60

   42 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    ArgTail  go to state 93
    Expr     go to state 38
    Term     go to state 39
    Factor   go to state 40


State 61

   67 Expr: Expr PLUS • Term

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Term    go to state 94
    Factor  go to state 40


State 62

   68 Expr: Expr MINUS • Term

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Term    go to state 95
    Factor  go to state 40


State 63

   70 Term: Term MULT • Factor

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Factor  go to state 96


State 64

   71 Term: Term DIV • Factor

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Factor  go to state 97


State 65

   64 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   65           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall

    ASSIGN  shift, and go to state 98


State 66

   62 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 62 (Assignment)


State 67

   66 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 99


State 68

   13 IfStmt: IF LPAREN ConditionList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 100


State 69

   29 CONJUNCTION: AND •

    $default  reduce using rule 29 (CONJUNCTION)


State 70

   30 CONJUNCTION: OR •

    $default  reduce using rule 30 (CONJUNCTION)


State 71

   19 ConditionList: Condition ConditionTail •

    $default  reduce using rule 19 (ConditionList)


State 72

   22 ConditionTail: CONJUNCTION • Condition ConditionTail

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Condition  go to state 101
    Expr       go to state 48
    Term       go to state 39
    Factor     go to state 40


State 73

   23 SIGN: GREATER_THAN •

    $default  reduce using rule 23 (SIGN)


State 74

   24 SIGN: LESS_THAN •

    $default  reduce using rule 24 (SIGN)


State 75

   25 SIGN: EQUAL_TO •

    $default  reduce using rule 25 (SIGN)


State 76

   26 SIGN: GREATER_THAN_EQUAL_TO •

    $default  reduce using rule 26 (SIGN)


State 77

   27 SIGN: LESS_THAN_EQUAL_TO •

    $default  reduce using rule 27 (SIGN)


State 78

   28 SIGN: NOT_EQUAL_TO •

    $default  reduce using rule 28 (SIGN)


State 79

   20 Condition: Expr SIGN • Expr

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 102
    Term    go to state 39
    Factor  go to state 40


State 80

   18 WhileStmt: WHILE LPAREN ConditionList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 103


State 81

   15 ElseIfStmt: ELSE_IF LPAREN ConditionList • RPAREN LBRACE Block RBRACE ElseIfStmt

    RPAREN  shift, and go to state 104


State 82

   17 ElseStmt: ELSE LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 45 (BlockStmtList)

    IfBlock                go to state 105
    IfStmt                 go to state 13
    FunctionCall           go to state 106
    Block                  go to state 107
    BlockStmtList          go to state 108
    BlockStmt              go to state 109
    Declaration            go to state 110
    DeclarationAssignment  go to state 111
    Type                   go to state 112
    Assignment             go to state 113
    Print                  go to state 114


State 83

   31 FunctionDeclaration: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 115


State 84

   34 ParamList: ParamTail •

    $default  reduce using rule 34 (ParamList)


State 85

   35 ParamTail: Param •
   36          | Param • COMMA ParamTail

    COMMA  shift, and go to state 116

    $default  reduce using rule 35 (ParamTail)


State 86

   37 Param: Type • ID
   38      | Type • ID LBRACKET RBRACKET

    ID  shift, and go to state 117


State 87

   55 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    RBRACKET  shift, and go to state 118
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62


State 88

   57 DeclarationAssignment: Type ID ASSIGN FunctionCall •

    $default  reduce using rule 57 (DeclarationAssignment)


State 89

   56 DeclarationAssignment: Type ID ASSIGN Expr • SEMICOLON
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 119
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62


State 90

   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term
   75 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 120
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62


State 91

   73 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 73 (Factor)


State 92

   32 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 32 (FunctionCall)


State 93

   42 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 42 (ArgTail)


State 94

   67 Expr: Expr PLUS Term •
   70 Term: Term • MULT Factor
   71     | Term • DIV Factor

    MULT  shift, and go to state 63
    DIV   shift, and go to state 64

    $default  reduce using rule 67 (Expr)


State 95

   68 Expr: Expr MINUS Term •
   70 Term: Term • MULT Factor
   71     | Term • DIV Factor

    MULT  shift, and go to state 63
    DIV   shift, and go to state 64

    $default  reduce using rule 68 (Expr)


State 96

   70 Term: Term MULT Factor •

    $default  reduce using rule 70 (Term)


State 97

   71 Term: Term DIV Factor •

    $default  reduce using rule 71 (Term)


State 98

   64 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   65           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall

    ID      shift, and go to state 42
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    FunctionCall  go to state 121
    Expr          go to state 122
    Term          go to state 39
    Factor        go to state 40


State 99

   66 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 66 (Print)


State 100

   13 IfStmt: IF LPAREN ConditionList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 45 (BlockStmtList)

    IfBlock                go to state 105
    IfStmt                 go to state 13
    FunctionCall           go to state 106
    Block                  go to state 123
    BlockStmtList          go to state 108
    BlockStmt              go to state 109
    Declaration            go to state 110
    DeclarationAssignment  go to state 111
    Type                   go to state 112
    Assignment             go to state 113
    Print                  go to state 114


State 101

   22 ConditionTail: CONJUNCTION Condition • ConditionTail

    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 21 (ConditionTail)

    ConditionTail  go to state 124
    CONJUNCTION    go to state 72


State 102

   20 Condition: Expr SIGN Expr •
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62

    $default  reduce using rule 20 (Condition)


State 103

   18 WhileStmt: WHILE LPAREN ConditionList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 45 (BlockStmtList)

    IfBlock                go to state 105
    IfStmt                 go to state 13
    FunctionCall           go to state 106
    Block                  go to state 125
    BlockStmtList          go to state 108
    BlockStmt              go to state 109
    Declaration            go to state 110
    DeclarationAssignment  go to state 111
    Type                   go to state 112
    Assignment             go to state 113
    Print                  go to state 114


State 104

   15 ElseIfStmt: ELSE_IF LPAREN ConditionList RPAREN • LBRACE Block RBRACE ElseIfStmt

    LBRACE  shift, and go to state 126


State 105

   52 BlockStmt: IfBlock •

    $default  reduce using rule 52 (BlockStmt)


State 106

   51 BlockStmt: FunctionCall •

    $default  reduce using rule 51 (BlockStmt)


State 107

   17 ElseStmt: ELSE LBRACE Block • RBRACE

    RBRACE  shift, and go to state 127


State 108

   43 Block: BlockStmtList • ReturnStmt
   44      | BlockStmtList •

    RETURN  shift, and go to state 128

    $default  reduce using rule 44 (Block)

    ReturnStmt  go to state 129


State 109

   46 BlockStmtList: BlockStmt • BlockStmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 45 (BlockStmtList)

    IfBlock                go to state 105
    IfStmt                 go to state 13
    FunctionCall           go to state 106
    BlockStmtList          go to state 130
    BlockStmt              go to state 109
    Declaration            go to state 110
    DeclarationAssignment  go to state 111
    Type                   go to state 112
    Assignment             go to state 113
    Print                  go to state 114


State 110

   47 BlockStmt: Declaration •

    $default  reduce using rule 47 (BlockStmt)


State 111

   48 BlockStmt: DeclarationAssignment •

    $default  reduce using rule 48 (BlockStmt)


State 112

   54 Declaration: Type • ID SEMICOLON
   55            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   56 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON
   57                      | Type • ID ASSIGN FunctionCall

    ID  shift, and go to state 131


State 113

   49 BlockStmt: Assignment •

    $default  reduce using rule 49 (BlockStmt)


State 114

   50 BlockStmt: Print •

    $default  reduce using rule 50 (BlockStmt)


State 115

   31 FunctionDeclaration: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 132


State 116

   36 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 133
    Param      go to state 85
    Type       go to state 86


State 117

   37 Param: Type ID •
   38      | Type ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 134

    $default  reduce using rule 37 (Param)


State 118

   55 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 135


State 119

   56 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 56 (DeclarationAssignment)


State 120

   75 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 75 (Factor)


State 121

   65 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall •

    $default  reduce using rule 65 (Assignment)


State 122

   64 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 136
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62


State 123

   13 IfStmt: IF LPAREN ConditionList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 137


State 124

   22 ConditionTail: CONJUNCTION Condition ConditionTail •

    $default  reduce using rule 22 (ConditionTail)


State 125

   18 WhileStmt: WHILE LPAREN ConditionList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 138


State 126

   15 ElseIfStmt: ELSE_IF LPAREN ConditionList RPAREN LBRACE • Block RBRACE ElseIfStmt

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 45 (BlockStmtList)

    IfBlock                go to state 105
    IfStmt                 go to state 13
    FunctionCall           go to state 106
    Block                  go to state 139
    BlockStmtList          go to state 108
    BlockStmt              go to state 109
    Declaration            go to state 110
    DeclarationAssignment  go to state 111
    Type                   go to state 112
    Assignment             go to state 113
    Print                  go to state 114


State 127

   17 ElseStmt: ELSE LBRACE Block RBRACE •

    $default  reduce using rule 17 (ElseStmt)


State 128

   53 ReturnStmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 33
    LPAREN  shift, and go to state 34
    NUMBER  shift, and go to state 35

    Expr    go to state 140
    Term    go to state 39
    Factor  go to state 40


State 129

   43 Block: BlockStmtList ReturnStmt •

    $default  reduce using rule 43 (Block)


State 130

   46 BlockStmtList: BlockStmt BlockStmtList •

    $default  reduce using rule 46 (BlockStmtList)


State 131

   54 Declaration: Type ID • SEMICOLON
   55            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   56 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON
   57                      | Type ID • ASSIGN FunctionCall

    SEMICOLON  shift, and go to state 53
    LBRACKET   shift, and go to state 55
    ASSIGN     shift, and go to state 56


State 132

   31 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 45 (BlockStmtList)

    IfBlock                go to state 105
    IfStmt                 go to state 13
    FunctionCall           go to state 106
    Block                  go to state 141
    BlockStmtList          go to state 108
    BlockStmt              go to state 109
    Declaration            go to state 110
    DeclarationAssignment  go to state 111
    Type                   go to state 112
    Assignment             go to state 113
    Print                  go to state 114


State 133

   36 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 36 (ParamTail)


State 134

   38 Param: Type ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 142


State 135

   55 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 55 (Declaration)


State 136

   64 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 64 (Assignment)


State 137

   13 IfStmt: IF LPAREN ConditionList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 13 (IfStmt)


State 138

   18 WhileStmt: WHILE LPAREN ConditionList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 18 (WhileStmt)


State 139

   15 ElseIfStmt: ELSE_IF LPAREN ConditionList RPAREN LBRACE Block • RBRACE ElseIfStmt

    RBRACE  shift, and go to state 143


State 140

   53 ReturnStmt: RETURN Expr • SEMICOLON
   67 Expr: Expr • PLUS Term
   68     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 144
    PLUS       shift, and go to state 61
    MINUS      shift, and go to state 62


State 141

   31 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 145


State 142

   38 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 38 (Param)


State 143

   15 ElseIfStmt: ELSE_IF LPAREN ConditionList RPAREN LBRACE Block RBRACE • ElseIfStmt

    ELSE_IF  shift, and go to state 30

    $default  reduce using rule 14 (ElseIfStmt)

    ElseIfStmt  go to state 146


State 144

   53 ReturnStmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 53 (ReturnStmt)


State 145

   31 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 31 (FunctionDeclaration)


State 146

   15 ElseIfStmt: ELSE_IF LPAREN ConditionList RPAREN LBRACE Block RBRACE ElseIfStmt •

    $default  reduce using rule 15 (ElseIfStmt)
