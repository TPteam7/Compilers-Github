Terminals unused in grammar

    TRUE
    FALSE
    ELSE
    WHILE


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList

    4 Stmt: Declaration
    5     | Assignment
    6     | Print
    7     | FunctionCall
    8     | FunctionDeclaration
    9     | IfStmt

   10 IfStmt: IF LPAREN Condition RPAREN LBRACE StmtList RBRACE

   11 Condition: Expr SIGN Expr

   12 SIGN: GREATER_THAN
   13     | LESS_THAN
   14     | EQUAL_TO
   15     | GREATER_THAN_EQUAL_TO
   16     | LESS_THAN_EQUAL_TO

   17 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

   18 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON

   19 ParamList: ε
   20          | ParamTail

   21 ParamTail: Param
   22          | Param COMMA ParamTail

   23 Param: Type ID
   24      | Type ID LBRACKET RBRACKET

   25 ArgList: ε
   26        | ArgTail

   27 ArgTail: Expr
   28        | Expr COMMA ArgTail

   29 Block: BlockStmtList ReturnStmt
   30      | BlockStmtList

   31 BlockStmtList: ε
   32              | BlockStmt BlockStmtList

   33 BlockStmt: Declaration
   34          | Assignment
   35          | Print
   36          | FunctionCall

   37 ReturnStmt: RETURN Expr SEMICOLON

   38 Declaration: Type ID SEMICOLON
   39            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   40 Type: INT
   41     | FLOAT
   42     | BOOL
   43     | VOID

   44 Assignment: ID ASSIGN Expr SEMICOLON
   45           | ID ASSIGN FunctionCall
   46           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   47           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall

   48 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   49 Expr: Expr PLUS Term
   50     | Expr MINUS Term
   51     | Term

   52 Term: Term MULT Factor
   53     | Term DIV Factor
   54     | Factor

   55 Factor: LPAREN Expr RPAREN
   56       | ID
   57       | ID LBRACKET Expr RBRACKET
   58       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 17 18 23 24 38 39 44 45 46 47 56 57
    INT <string> (259) 40
    FLOAT <string> (260) 41
    BOOL <string> (261) 42
    VOID <string> (262) 43
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 48
    IF <string> (266) 10
    ELSE <string> (267)
    WHILE <string> (268)
    RETURN <string> (269) 37
    SEMICOLON <character> (270) 18 37 38 39 44 46 48
    COMMA <character> (271) 22 28
    LPAREN <character> (272) 10 17 18 48 55
    RPAREN <character> (273) 10 17 18 48 55
    LBRACE <character> (274) 10 17
    RBRACE <character> (275) 10 17
    LBRACKET <character> (276) 24 39 46 47 57
    RBRACKET <character> (277) 24 39 46 47 57
    ASSIGN <op> (278) 44 45 46 47
    PLUS <op> (279) 49
    MINUS <op> (280) 50
    MULT <op> (281) 52
    DIV <op> (282) 53
    GREATER_THAN <op> (283) 12
    LESS_THAN <op> (284) 13
    EQUAL_TO <op> (285) 14
    GREATER_THAN_EQUAL_TO <op> (286) 15
    LESS_THAN_EQUAL_TO <op> (287) 16
    NUMBER <number> (288) 58


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    Program <node> (35)
        on left: 1
        on right: 0
    StmtList <node> (36)
        on left: 2 3
        on right: 1 3 10
    Stmt <node> (37)
        on left: 4 5 6 7 8 9
        on right: 3
    IfStmt <node> (38)
        on left: 10
        on right: 9
    Condition <node> (39)
        on left: 11
        on right: 10
    SIGN <node> (40)
        on left: 12 13 14 15 16
        on right: 11
    FunctionDeclaration <node> (41)
        on left: 17
        on right: 8
    FunctionCall <node> (42)
        on left: 18
        on right: 7 36 45 47
    ParamList <node> (43)
        on left: 19 20
        on right: 17
    ParamTail <node> (44)
        on left: 21 22
        on right: 20 22
    Param <node> (45)
        on left: 23 24
        on right: 21 22
    ArgList <node> (46)
        on left: 25 26
        on right: 18
    ArgTail <node> (47)
        on left: 27 28
        on right: 26 28
    Block <node> (48)
        on left: 29 30
        on right: 17
    BlockStmtList <node> (49)
        on left: 31 32
        on right: 29 30 32
    BlockStmt <node> (50)
        on left: 33 34 35 36
        on right: 32
    ReturnStmt <node> (51)
        on left: 37
        on right: 29
    Declaration <node> (52)
        on left: 38 39
        on right: 4 33
    Type <node> (53)
        on left: 40 41 42 43
        on right: 17 23 24 38 39
    Assignment <node> (54)
        on left: 44 45 46 47
        on right: 5 34
    Print <node> (55)
        on left: 48
        on right: 6 35
    Expr <node> (56)
        on left: 49 50 51
        on right: 11 27 28 37 39 44 46 47 48 49 50 55 57
    Term <node> (57)
        on left: 52 53 54
        on right: 49 50 51 52 53
    Factor <node> (58)
        on left: 55 56 57 58
        on right: 52 53 54


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    Program              go to state 8
    StmtList             go to state 9
    Stmt                 go to state 10
    IfStmt               go to state 11
    FunctionDeclaration  go to state 12
    FunctionCall         go to state 13
    Declaration          go to state 14
    Type                 go to state 15
    Assignment           go to state 16
    Print                go to state 17


State 1

   18 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   44 Assignment: ID • ASSIGN Expr SEMICOLON
   45           | ID • ASSIGN FunctionCall
   46           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   47           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall

    LPAREN    shift, and go to state 18
    LBRACKET  shift, and go to state 19
    ASSIGN    shift, and go to state 20


State 2

   40 Type: INT •

    $default  reduce using rule 40 (Type)


State 3

   41 Type: FLOAT •

    $default  reduce using rule 41 (Type)


State 4

   42 Type: BOOL •

    $default  reduce using rule 42 (Type)


State 5

   43 Type: VOID •

    $default  reduce using rule 43 (Type)


State 6

   48 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 21


State 7

   10 IfStmt: IF • LPAREN Condition RPAREN LBRACE StmtList RBRACE

    LPAREN  shift, and go to state 22


State 8

    0 $accept: Program • $end

    $end  shift, and go to state 23


State 9

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 10

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    StmtList             go to state 24
    Stmt                 go to state 10
    IfStmt               go to state 11
    FunctionDeclaration  go to state 12
    FunctionCall         go to state 13
    Declaration          go to state 14
    Type                 go to state 15
    Assignment           go to state 16
    Print                go to state 17


State 11

    9 Stmt: IfStmt •

    $default  reduce using rule 9 (Stmt)


State 12

    8 Stmt: FunctionDeclaration •

    $default  reduce using rule 8 (Stmt)


State 13

    7 Stmt: FunctionCall •

    $default  reduce using rule 7 (Stmt)


State 14

    4 Stmt: Declaration •

    $default  reduce using rule 4 (Stmt)


State 15

   17 FunctionDeclaration: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   38 Declaration: Type • ID SEMICOLON
   39            | Type • ID LBRACKET Expr RBRACKET SEMICOLON

    ID  shift, and go to state 25


State 16

    5 Stmt: Assignment •

    $default  reduce using rule 5 (Stmt)


State 17

    6 Stmt: Print •

    $default  reduce using rule 6 (Stmt)


State 18

   18 FunctionCall: ID LPAREN • ArgList RPAREN SEMICOLON

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    $default  reduce using rule 25 (ArgList)

    ArgList  go to state 29
    ArgTail  go to state 30
    Expr     go to state 31
    Term     go to state 32
    Factor   go to state 33


State 19

   46 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   47           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Expr    go to state 34
    Term    go to state 32
    Factor  go to state 33


State 20

   44 Assignment: ID ASSIGN • Expr SEMICOLON
   45           | ID ASSIGN • FunctionCall

    ID      shift, and go to state 35
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    FunctionCall  go to state 36
    Expr          go to state 37
    Term          go to state 32
    Factor        go to state 33


State 21

   48 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Expr    go to state 38
    Term    go to state 32
    Factor  go to state 33


State 22

   10 IfStmt: IF LPAREN • Condition RPAREN LBRACE StmtList RBRACE

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Condition  go to state 39
    Expr       go to state 40
    Term       go to state 32
    Factor     go to state 33


State 23

    0 $accept: Program $end •

    $default  accept


State 24

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 25

   17 FunctionDeclaration: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   38 Declaration: Type ID • SEMICOLON
   39            | Type ID • LBRACKET Expr RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 41
    LPAREN     shift, and go to state 42
    LBRACKET   shift, and go to state 43


State 26

   56 Factor: ID •
   57       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 44

    $default  reduce using rule 56 (Factor)


State 27

   55 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Expr    go to state 45
    Term    go to state 32
    Factor  go to state 33


State 28

   58 Factor: NUMBER •

    $default  reduce using rule 58 (Factor)


State 29

   18 FunctionCall: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 46


State 30

   26 ArgList: ArgTail •

    $default  reduce using rule 26 (ArgList)


State 31

   27 ArgTail: Expr •
   28        | Expr • COMMA ArgTail
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    COMMA  shift, and go to state 47
    PLUS   shift, and go to state 48
    MINUS  shift, and go to state 49

    $default  reduce using rule 27 (ArgTail)


State 32

   51 Expr: Term •
   52 Term: Term • MULT Factor
   53     | Term • DIV Factor

    MULT  shift, and go to state 50
    DIV   shift, and go to state 51

    $default  reduce using rule 51 (Expr)


State 33

   54 Term: Factor •

    $default  reduce using rule 54 (Term)


State 34

   46 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   47           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    RBRACKET  shift, and go to state 52
    PLUS      shift, and go to state 48
    MINUS     shift, and go to state 49


State 35

   18 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   56 Factor: ID •
   57       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 18
    LBRACKET  shift, and go to state 44

    $default  reduce using rule 56 (Factor)


State 36

   45 Assignment: ID ASSIGN FunctionCall •

    $default  reduce using rule 45 (Assignment)


State 37

   44 Assignment: ID ASSIGN Expr • SEMICOLON
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 53
    PLUS       shift, and go to state 48
    MINUS      shift, and go to state 49


State 38

   48 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    RPAREN  shift, and go to state 54
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49


State 39

   10 IfStmt: IF LPAREN Condition • RPAREN LBRACE StmtList RBRACE

    RPAREN  shift, and go to state 55


State 40

   11 Condition: Expr • SIGN Expr
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    PLUS                   shift, and go to state 48
    MINUS                  shift, and go to state 49
    GREATER_THAN           shift, and go to state 56
    LESS_THAN              shift, and go to state 57
    EQUAL_TO               shift, and go to state 58
    GREATER_THAN_EQUAL_TO  shift, and go to state 59
    LESS_THAN_EQUAL_TO     shift, and go to state 60

    SIGN  go to state 61


State 41

   38 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 38 (Declaration)


State 42

   17 FunctionDeclaration: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 19 (ParamList)

    ParamList  go to state 62
    ParamTail  go to state 63
    Param      go to state 64
    Type       go to state 65


State 43

   39 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Expr    go to state 66
    Term    go to state 32
    Factor  go to state 33


State 44

   57 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Expr    go to state 67
    Term    go to state 32
    Factor  go to state 33


State 45

   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term
   55 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 68
    PLUS    shift, and go to state 48
    MINUS   shift, and go to state 49


State 46

   18 FunctionCall: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 69


State 47

   28 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    ArgTail  go to state 70
    Expr     go to state 31
    Term     go to state 32
    Factor   go to state 33


State 48

   49 Expr: Expr PLUS • Term

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Term    go to state 71
    Factor  go to state 33


State 49

   50 Expr: Expr MINUS • Term

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Term    go to state 72
    Factor  go to state 33


State 50

   52 Term: Term MULT • Factor

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Factor  go to state 73


State 51

   53 Term: Term DIV • Factor

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Factor  go to state 74


State 52

   46 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   47           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall

    ASSIGN  shift, and go to state 75


State 53

   44 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 44 (Assignment)


State 54

   48 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 55

   10 IfStmt: IF LPAREN Condition RPAREN • LBRACE StmtList RBRACE

    LBRACE  shift, and go to state 77


State 56

   12 SIGN: GREATER_THAN •

    $default  reduce using rule 12 (SIGN)


State 57

   13 SIGN: LESS_THAN •

    $default  reduce using rule 13 (SIGN)


State 58

   14 SIGN: EQUAL_TO •

    $default  reduce using rule 14 (SIGN)


State 59

   15 SIGN: GREATER_THAN_EQUAL_TO •

    $default  reduce using rule 15 (SIGN)


State 60

   16 SIGN: LESS_THAN_EQUAL_TO •

    $default  reduce using rule 16 (SIGN)


State 61

   11 Condition: Expr SIGN • Expr

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Expr    go to state 78
    Term    go to state 32
    Factor  go to state 33


State 62

   17 FunctionDeclaration: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 79


State 63

   20 ParamList: ParamTail •

    $default  reduce using rule 20 (ParamList)


State 64

   21 ParamTail: Param •
   22          | Param • COMMA ParamTail

    COMMA  shift, and go to state 80

    $default  reduce using rule 21 (ParamTail)


State 65

   23 Param: Type • ID
   24      | Type • ID LBRACKET RBRACKET

    ID  shift, and go to state 81


State 66

   39 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    RBRACKET  shift, and go to state 82
    PLUS      shift, and go to state 48
    MINUS     shift, and go to state 49


State 67

   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term
   57 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 83
    PLUS      shift, and go to state 48
    MINUS     shift, and go to state 49


State 68

   55 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 55 (Factor)


State 69

   18 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 18 (FunctionCall)


State 70

   28 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 28 (ArgTail)


State 71

   49 Expr: Expr PLUS Term •
   52 Term: Term • MULT Factor
   53     | Term • DIV Factor

    MULT  shift, and go to state 50
    DIV   shift, and go to state 51

    $default  reduce using rule 49 (Expr)


State 72

   50 Expr: Expr MINUS Term •
   52 Term: Term • MULT Factor
   53     | Term • DIV Factor

    MULT  shift, and go to state 50
    DIV   shift, and go to state 51

    $default  reduce using rule 50 (Expr)


State 73

   52 Term: Term MULT Factor •

    $default  reduce using rule 52 (Term)


State 74

   53 Term: Term DIV Factor •

    $default  reduce using rule 53 (Term)


State 75

   46 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   47           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall

    ID      shift, and go to state 35
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    FunctionCall  go to state 84
    Expr          go to state 85
    Term          go to state 32
    Factor        go to state 33


State 76

   48 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 48 (Print)


State 77

   10 IfStmt: IF LPAREN Condition RPAREN LBRACE • StmtList RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    StmtList             go to state 86
    Stmt                 go to state 10
    IfStmt               go to state 11
    FunctionDeclaration  go to state 12
    FunctionCall         go to state 13
    Declaration          go to state 14
    Type                 go to state 15
    Assignment           go to state 16
    Print                go to state 17


State 78

   11 Condition: Expr SIGN Expr •
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    PLUS   shift, and go to state 48
    MINUS  shift, and go to state 49

    $default  reduce using rule 11 (Condition)


State 79

   17 FunctionDeclaration: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 87


State 80

   22 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 88
    Param      go to state 64
    Type       go to state 65


State 81

   23 Param: Type ID •
   24      | Type ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 89

    $default  reduce using rule 23 (Param)


State 82

   39 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 83

   57 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 57 (Factor)


State 84

   47 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall •

    $default  reduce using rule 47 (Assignment)


State 85

   46 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 91
    PLUS       shift, and go to state 48
    MINUS      shift, and go to state 49


State 86

   10 IfStmt: IF LPAREN Condition RPAREN LBRACE StmtList • RBRACE

    RBRACE  shift, and go to state 92


State 87

   17 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6

    $default  reduce using rule 31 (BlockStmtList)

    FunctionCall   go to state 93
    Block          go to state 94
    BlockStmtList  go to state 95
    BlockStmt      go to state 96
    Declaration    go to state 97
    Type           go to state 98
    Assignment     go to state 99
    Print          go to state 100


State 88

   22 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 22 (ParamTail)


State 89

   24 Param: Type ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 101


State 90

   39 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 39 (Declaration)


State 91

   46 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 46 (Assignment)


State 92

   10 IfStmt: IF LPAREN Condition RPAREN LBRACE StmtList RBRACE •

    $default  reduce using rule 10 (IfStmt)


State 93

   36 BlockStmt: FunctionCall •

    $default  reduce using rule 36 (BlockStmt)


State 94

   17 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 102


State 95

   29 Block: BlockStmtList • ReturnStmt
   30      | BlockStmtList •

    RETURN  shift, and go to state 103

    $default  reduce using rule 30 (Block)

    ReturnStmt  go to state 104


State 96

   32 BlockStmtList: BlockStmt • BlockStmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6

    $default  reduce using rule 31 (BlockStmtList)

    FunctionCall   go to state 93
    BlockStmtList  go to state 105
    BlockStmt      go to state 96
    Declaration    go to state 97
    Type           go to state 98
    Assignment     go to state 99
    Print          go to state 100


State 97

   33 BlockStmt: Declaration •

    $default  reduce using rule 33 (BlockStmt)


State 98

   38 Declaration: Type • ID SEMICOLON
   39            | Type • ID LBRACKET Expr RBRACKET SEMICOLON

    ID  shift, and go to state 106


State 99

   34 BlockStmt: Assignment •

    $default  reduce using rule 34 (BlockStmt)


State 100

   35 BlockStmt: Print •

    $default  reduce using rule 35 (BlockStmt)


State 101

   24 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 24 (Param)


State 102

   17 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 17 (FunctionDeclaration)


State 103

   37 ReturnStmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 26
    LPAREN  shift, and go to state 27
    NUMBER  shift, and go to state 28

    Expr    go to state 107
    Term    go to state 32
    Factor  go to state 33


State 104

   29 Block: BlockStmtList ReturnStmt •

    $default  reduce using rule 29 (Block)


State 105

   32 BlockStmtList: BlockStmt BlockStmtList •

    $default  reduce using rule 32 (BlockStmtList)


State 106

   38 Declaration: Type ID • SEMICOLON
   39            | Type ID • LBRACKET Expr RBRACKET SEMICOLON

    SEMICOLON  shift, and go to state 41
    LBRACKET   shift, and go to state 43


State 107

   37 ReturnStmt: RETURN Expr • SEMICOLON
   49 Expr: Expr • PLUS Term
   50     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 108
    PLUS       shift, and go to state 48
    MINUS      shift, and go to state 49


State 108

   37 ReturnStmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 37 (ReturnStmt)
