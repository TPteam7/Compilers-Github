Terminals unused in grammar

    TRUE
    FALSE
    WHILE
    AND
    OR


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList

    4 Stmt: Declaration
    5     | DeclarationAssignment
    6     | Assignment
    7     | Print
    8     | FunctionCall
    9     | FunctionDeclaration
   10     | IfBlock

   11 IfBlock: IfStmt ElseIfStmt ElseStmt

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE

   13 ElseIfStmt: ε
   14           | ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

   15 ElseStmt: ε
   16         | ELSE LBRACE Block RBRACE

   17 Condition: Expr SIGN Expr

   18 SIGN: GREATER_THAN
   19     | LESS_THAN
   20     | EQUAL_TO
   21     | GREATER_THAN_EQUAL_TO
   22     | LESS_THAN_EQUAL_TO
   23     | NOT_EQUAL_TO

   24 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

   25 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON

   26 ParamList: ε
   27          | ParamTail

   28 ParamTail: Param
   29          | Param COMMA ParamTail

   30 Param: Type ID
   31      | Type ID LBRACKET RBRACKET

   32 ArgList: ε
   33        | ArgTail

   34 ArgTail: Expr
   35        | Expr COMMA ArgTail

   36 Block: BlockStmtList ReturnStmt
   37      | BlockStmtList

   38 BlockStmtList: ε
   39              | BlockStmt BlockStmtList

   40 BlockStmt: Declaration
   41          | DeclarationAssignment
   42          | Assignment
   43          | Print
   44          | FunctionCall
   45          | IfBlock

   46 ReturnStmt: RETURN Expr SEMICOLON

   47 Declaration: Type ID SEMICOLON
   48            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   49 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON

   50 Type: INT
   51     | FLOAT
   52     | BOOL
   53     | VOID

   54 Assignment: ID ASSIGN Expr SEMICOLON
   55           | ID ASSIGN FunctionCall
   56           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   57           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall

   58 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   59 Expr: Expr PLUS Term
   60     | Expr MINUS Term
   61     | Term

   62 Term: Term MULT Factor
   63     | Term DIV Factor
   64     | Factor

   65 Factor: LPAREN Expr RPAREN
   66       | ID
   67       | ID LBRACKET Expr RBRACKET
   68       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 24 25 30 31 47 48 49 54 55 56 57 66 67
    INT <string> (259) 50
    FLOAT <string> (260) 51
    BOOL <string> (261) 52
    VOID <string> (262) 53
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 58
    IF <string> (266) 12
    ELSE <string> (267) 16
    ELSE_IF <string> (268) 14
    WHILE <string> (269)
    RETURN <string> (270) 46
    SEMICOLON <character> (271) 25 46 47 48 49 54 56 58
    COMMA <character> (272) 29 35
    LPAREN <character> (273) 12 14 24 25 58 65
    RPAREN <character> (274) 12 14 24 25 58 65
    LBRACE <character> (275) 12 14 16 24
    RBRACE <character> (276) 12 14 16 24
    LBRACKET <character> (277) 31 48 56 57 67
    RBRACKET <character> (278) 31 48 56 57 67
    ASSIGN <op> (279) 49 54 55 56 57
    PLUS <op> (280) 59
    MINUS <op> (281) 60
    MULT <op> (282) 62
    DIV <op> (283) 63
    GREATER_THAN <stringOp> (284) 18
    LESS_THAN <stringOp> (285) 19
    EQUAL_TO <stringOp> (286) 20
    GREATER_THAN_EQUAL_TO <stringOp> (287) 21
    LESS_THAN_EQUAL_TO <stringOp> (288) 22
    AND <stringOp> (289)
    OR <stringOp> (290)
    NOT_EQUAL_TO <stringOp> (291) 23
    NUMBER <number> (292) 68


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    Program <node> (39)
        on left: 1
        on right: 0
    StmtList <node> (40)
        on left: 2 3
        on right: 1 3
    Stmt <node> (41)
        on left: 4 5 6 7 8 9 10
        on right: 3
    IfBlock <node> (42)
        on left: 11
        on right: 10 45
    IfStmt <node> (43)
        on left: 12
        on right: 11
    ElseIfStmt <node> (44)
        on left: 13 14
        on right: 11 14
    ElseStmt <node> (45)
        on left: 15 16
        on right: 11
    Condition <node> (46)
        on left: 17
        on right: 12 14
    SIGN <node> (47)
        on left: 18 19 20 21 22 23
        on right: 17
    FunctionDeclaration <node> (48)
        on left: 24
        on right: 9
    FunctionCall <node> (49)
        on left: 25
        on right: 8 44 55 57
    ParamList <node> (50)
        on left: 26 27
        on right: 24
    ParamTail <node> (51)
        on left: 28 29
        on right: 27 29
    Param <node> (52)
        on left: 30 31
        on right: 28 29
    ArgList <node> (53)
        on left: 32 33
        on right: 25
    ArgTail <node> (54)
        on left: 34 35
        on right: 33 35
    Block <node> (55)
        on left: 36 37
        on right: 12 14 16 24
    BlockStmtList <node> (56)
        on left: 38 39
        on right: 36 37 39
    BlockStmt <node> (57)
        on left: 40 41 42 43 44 45
        on right: 39
    ReturnStmt <node> (58)
        on left: 46
        on right: 36
    Declaration <node> (59)
        on left: 47 48
        on right: 4 40
    DeclarationAssignment <node> (60)
        on left: 49
        on right: 5 41
    Type <node> (61)
        on left: 50 51 52 53
        on right: 24 30 31 47 48 49
    Assignment <node> (62)
        on left: 54 55 56 57
        on right: 6 42
    Print <node> (63)
        on left: 58
        on right: 7 43
    Expr <node> (64)
        on left: 59 60 61
        on right: 17 34 35 46 48 49 54 56 57 58 59 60 65 67
    Term <node> (65)
        on left: 62 63 64
        on right: 59 60 61 62 63
    Factor <node> (66)
        on left: 65 66 67 68
        on right: 62 63 64


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    Program                go to state 8
    StmtList               go to state 9
    Stmt                   go to state 10
    IfBlock                go to state 11
    IfStmt                 go to state 12
    FunctionDeclaration    go to state 13
    FunctionCall           go to state 14
    Declaration            go to state 15
    DeclarationAssignment  go to state 16
    Type                   go to state 17
    Assignment             go to state 18
    Print                  go to state 19


State 1

   25 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   54 Assignment: ID • ASSIGN Expr SEMICOLON
   55           | ID • ASSIGN FunctionCall
   56           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   57           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall

    LPAREN    shift, and go to state 20
    LBRACKET  shift, and go to state 21
    ASSIGN    shift, and go to state 22


State 2

   50 Type: INT •

    $default  reduce using rule 50 (Type)


State 3

   51 Type: FLOAT •

    $default  reduce using rule 51 (Type)


State 4

   52 Type: BOOL •

    $default  reduce using rule 52 (Type)


State 5

   53 Type: VOID •

    $default  reduce using rule 53 (Type)


State 6

   58 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 23


State 7

   12 IfStmt: IF • LPAREN Condition RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 24


State 8

    0 $accept: Program • $end

    $end  shift, and go to state 25


State 9

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 10

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    StmtList               go to state 26
    Stmt                   go to state 10
    IfBlock                go to state 11
    IfStmt                 go to state 12
    FunctionDeclaration    go to state 13
    FunctionCall           go to state 14
    Declaration            go to state 15
    DeclarationAssignment  go to state 16
    Type                   go to state 17
    Assignment             go to state 18
    Print                  go to state 19


State 11

   10 Stmt: IfBlock •

    $default  reduce using rule 10 (Stmt)


State 12

   11 IfBlock: IfStmt • ElseIfStmt ElseStmt

    ELSE_IF  shift, and go to state 27

    $default  reduce using rule 13 (ElseIfStmt)

    ElseIfStmt  go to state 28


State 13

    9 Stmt: FunctionDeclaration •

    $default  reduce using rule 9 (Stmt)


State 14

    8 Stmt: FunctionCall •

    $default  reduce using rule 8 (Stmt)


State 15

    4 Stmt: Declaration •

    $default  reduce using rule 4 (Stmt)


State 16

    5 Stmt: DeclarationAssignment •

    $default  reduce using rule 5 (Stmt)


State 17

   24 FunctionDeclaration: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   47 Declaration: Type • ID SEMICOLON
   48            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   49 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 29


State 18

    6 Stmt: Assignment •

    $default  reduce using rule 6 (Stmt)


State 19

    7 Stmt: Print •

    $default  reduce using rule 7 (Stmt)


State 20

   25 FunctionCall: ID LPAREN • ArgList RPAREN SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    $default  reduce using rule 32 (ArgList)

    ArgList  go to state 33
    ArgTail  go to state 34
    Expr     go to state 35
    Term     go to state 36
    Factor   go to state 37


State 21

   56 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   57           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 38
    Term    go to state 36
    Factor  go to state 37


State 22

   54 Assignment: ID ASSIGN • Expr SEMICOLON
   55           | ID ASSIGN • FunctionCall

    ID      shift, and go to state 39
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    FunctionCall  go to state 40
    Expr          go to state 41
    Term          go to state 36
    Factor        go to state 37


State 23

   58 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 42
    Term    go to state 36
    Factor  go to state 37


State 24

   12 IfStmt: IF LPAREN • Condition RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Condition  go to state 43
    Expr       go to state 44
    Term       go to state 36
    Factor     go to state 37


State 25

    0 $accept: Program $end •

    $default  accept


State 26

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 27

   14 ElseIfStmt: ELSE_IF • LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    LPAREN  shift, and go to state 45


State 28

   11 IfBlock: IfStmt ElseIfStmt • ElseStmt

    ELSE  shift, and go to state 46

    $default  reduce using rule 15 (ElseStmt)

    ElseStmt  go to state 47


State 29

   24 FunctionDeclaration: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   47 Declaration: Type ID • SEMICOLON
   48            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   49 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 48
    LPAREN     shift, and go to state 49
    LBRACKET   shift, and go to state 50
    ASSIGN     shift, and go to state 51


State 30

   66 Factor: ID •
   67       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 52

    $default  reduce using rule 66 (Factor)


State 31

   65 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 53
    Term    go to state 36
    Factor  go to state 37


State 32

   68 Factor: NUMBER •

    $default  reduce using rule 68 (Factor)


State 33

   25 FunctionCall: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 54


State 34

   33 ArgList: ArgTail •

    $default  reduce using rule 33 (ArgList)


State 35

   34 ArgTail: Expr •
   35        | Expr • COMMA ArgTail
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    COMMA  shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 34 (ArgTail)


State 36

   61 Expr: Term •
   62 Term: Term • MULT Factor
   63     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 61 (Expr)


State 37

   64 Term: Factor •

    $default  reduce using rule 64 (Term)


State 38

   56 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   57           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    RBRACKET  shift, and go to state 60
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 39

   25 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   66 Factor: ID •
   67       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 20
    LBRACKET  shift, and go to state 52

    $default  reduce using rule 66 (Factor)


State 40

   55 Assignment: ID ASSIGN FunctionCall •

    $default  reduce using rule 55 (Assignment)


State 41

   54 Assignment: ID ASSIGN Expr • SEMICOLON
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 61
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 42

   58 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    RPAREN  shift, and go to state 62
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57


State 43

   12 IfStmt: IF LPAREN Condition • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 63


State 44

   17 Condition: Expr • SIGN Expr
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    PLUS                   shift, and go to state 56
    MINUS                  shift, and go to state 57
    GREATER_THAN           shift, and go to state 64
    LESS_THAN              shift, and go to state 65
    EQUAL_TO               shift, and go to state 66
    GREATER_THAN_EQUAL_TO  shift, and go to state 67
    LESS_THAN_EQUAL_TO     shift, and go to state 68
    NOT_EQUAL_TO           shift, and go to state 69

    SIGN  go to state 70


State 45

   14 ElseIfStmt: ELSE_IF LPAREN • Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Condition  go to state 71
    Expr       go to state 44
    Term       go to state 36
    Factor     go to state 37


State 46

   16 ElseStmt: ELSE • LBRACE Block RBRACE

    LBRACE  shift, and go to state 72


State 47

   11 IfBlock: IfStmt ElseIfStmt ElseStmt •

    $default  reduce using rule 11 (IfBlock)


State 48

   47 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 47 (Declaration)


State 49

   24 FunctionDeclaration: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 26 (ParamList)

    ParamList  go to state 73
    ParamTail  go to state 74
    Param      go to state 75
    Type       go to state 76


State 50

   48 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 77
    Term    go to state 36
    Factor  go to state 37


State 51

   49 DeclarationAssignment: Type ID ASSIGN • Expr SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 78
    Term    go to state 36
    Factor  go to state 37


State 52

   67 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 79
    Term    go to state 36
    Factor  go to state 37


State 53

   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term
   65 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 80
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57


State 54

   25 FunctionCall: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 55

   35 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    ArgTail  go to state 82
    Expr     go to state 35
    Term     go to state 36
    Factor   go to state 37


State 56

   59 Expr: Expr PLUS • Term

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Term    go to state 83
    Factor  go to state 37


State 57

   60 Expr: Expr MINUS • Term

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Term    go to state 84
    Factor  go to state 37


State 58

   62 Term: Term MULT • Factor

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Factor  go to state 85


State 59

   63 Term: Term DIV • Factor

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Factor  go to state 86


State 60

   56 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   57           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall

    ASSIGN  shift, and go to state 87


State 61

   54 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 54 (Assignment)


State 62

   58 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 63

   12 IfStmt: IF LPAREN Condition RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 89


State 64

   18 SIGN: GREATER_THAN •

    $default  reduce using rule 18 (SIGN)


State 65

   19 SIGN: LESS_THAN •

    $default  reduce using rule 19 (SIGN)


State 66

   20 SIGN: EQUAL_TO •

    $default  reduce using rule 20 (SIGN)


State 67

   21 SIGN: GREATER_THAN_EQUAL_TO •

    $default  reduce using rule 21 (SIGN)


State 68

   22 SIGN: LESS_THAN_EQUAL_TO •

    $default  reduce using rule 22 (SIGN)


State 69

   23 SIGN: NOT_EQUAL_TO •

    $default  reduce using rule 23 (SIGN)


State 70

   17 Condition: Expr SIGN • Expr

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 90
    Term    go to state 36
    Factor  go to state 37


State 71

   14 ElseIfStmt: ELSE_IF LPAREN Condition • RPAREN LBRACE Block RBRACE ElseIfStmt

    RPAREN  shift, and go to state 91


State 72

   16 ElseStmt: ELSE LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 38 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 94
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 73

   24 FunctionDeclaration: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 102


State 74

   27 ParamList: ParamTail •

    $default  reduce using rule 27 (ParamList)


State 75

   28 ParamTail: Param •
   29          | Param • COMMA ParamTail

    COMMA  shift, and go to state 103

    $default  reduce using rule 28 (ParamTail)


State 76

   30 Param: Type • ID
   31      | Type • ID LBRACKET RBRACKET

    ID  shift, and go to state 104


State 77

   48 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    RBRACKET  shift, and go to state 105
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 78

   49 DeclarationAssignment: Type ID ASSIGN Expr • SEMICOLON
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 106
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 79

   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term
   67 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 107
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 80

   65 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 65 (Factor)


State 81

   25 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 25 (FunctionCall)


State 82

   35 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 35 (ArgTail)


State 83

   59 Expr: Expr PLUS Term •
   62 Term: Term • MULT Factor
   63     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 59 (Expr)


State 84

   60 Expr: Expr MINUS Term •
   62 Term: Term • MULT Factor
   63     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 60 (Expr)


State 85

   62 Term: Term MULT Factor •

    $default  reduce using rule 62 (Term)


State 86

   63 Term: Term DIV Factor •

    $default  reduce using rule 63 (Term)


State 87

   56 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   57           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall

    ID      shift, and go to state 39
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    FunctionCall  go to state 108
    Expr          go to state 109
    Term          go to state 36
    Factor        go to state 37


State 88

   58 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 58 (Print)


State 89

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 38 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 110
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 90

   17 Condition: Expr SIGN Expr •
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 17 (Condition)


State 91

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN • LBRACE Block RBRACE ElseIfStmt

    LBRACE  shift, and go to state 111


State 92

   45 BlockStmt: IfBlock •

    $default  reduce using rule 45 (BlockStmt)


State 93

   44 BlockStmt: FunctionCall •

    $default  reduce using rule 44 (BlockStmt)


State 94

   16 ElseStmt: ELSE LBRACE Block • RBRACE

    RBRACE  shift, and go to state 112


State 95

   36 Block: BlockStmtList • ReturnStmt
   37      | BlockStmtList •

    RETURN  shift, and go to state 113

    $default  reduce using rule 37 (Block)

    ReturnStmt  go to state 114


State 96

   39 BlockStmtList: BlockStmt • BlockStmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 38 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    BlockStmtList          go to state 115
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 97

   40 BlockStmt: Declaration •

    $default  reduce using rule 40 (BlockStmt)


State 98

   41 BlockStmt: DeclarationAssignment •

    $default  reduce using rule 41 (BlockStmt)


State 99

   47 Declaration: Type • ID SEMICOLON
   48            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   49 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 116


State 100

   42 BlockStmt: Assignment •

    $default  reduce using rule 42 (BlockStmt)


State 101

   43 BlockStmt: Print •

    $default  reduce using rule 43 (BlockStmt)


State 102

   24 FunctionDeclaration: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 117


State 103

   29 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 118
    Param      go to state 75
    Type       go to state 76


State 104

   30 Param: Type ID •
   31      | Type ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 119

    $default  reduce using rule 30 (Param)


State 105

   48 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 120


State 106

   49 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 49 (DeclarationAssignment)


State 107

   67 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 67 (Factor)


State 108

   57 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall •

    $default  reduce using rule 57 (Assignment)


State 109

   56 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 121
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 110

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 122


State 111

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE • Block RBRACE ElseIfStmt

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 38 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 123
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 112

   16 ElseStmt: ELSE LBRACE Block RBRACE •

    $default  reduce using rule 16 (ElseStmt)


State 113

   46 ReturnStmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 124
    Term    go to state 36
    Factor  go to state 37


State 114

   36 Block: BlockStmtList ReturnStmt •

    $default  reduce using rule 36 (Block)


State 115

   39 BlockStmtList: BlockStmt BlockStmtList •

    $default  reduce using rule 39 (BlockStmtList)


State 116

   47 Declaration: Type ID • SEMICOLON
   48            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   49 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 48
    LBRACKET   shift, and go to state 50
    ASSIGN     shift, and go to state 51


State 117

   24 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 38 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 125
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 118

   29 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 29 (ParamTail)


State 119

   31 Param: Type ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 126


State 120

   48 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 48 (Declaration)


State 121

   56 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 56 (Assignment)


State 122

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 12 (IfStmt)


State 123

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block • RBRACE ElseIfStmt

    RBRACE  shift, and go to state 127


State 124

   46 ReturnStmt: RETURN Expr • SEMICOLON
   59 Expr: Expr • PLUS Term
   60     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 128
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 125

   24 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 129


State 126

   31 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 31 (Param)


State 127

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE • ElseIfStmt

    ELSE_IF  shift, and go to state 27

    $default  reduce using rule 13 (ElseIfStmt)

    ElseIfStmt  go to state 130


State 128

   46 ReturnStmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 46 (ReturnStmt)


State 129

   24 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 24 (FunctionDeclaration)


State 130

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt •

    $default  reduce using rule 14 (ElseIfStmt)
