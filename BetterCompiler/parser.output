Terminals unused in grammar

    TRUE
    FALSE
    WHILE


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList

    4 Stmt: Declaration
    5     | DeclarationAssignment
    6     | Assignment
    7     | Print
    8     | FunctionCall
    9     | FunctionDeclaration
   10     | IfBlock

   11 IfBlock: IfStmt ElseIfStmt ElseStmt

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE

   13 ElseIfStmt: ε
   14           | ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

   15 ElseStmt: ε
   16         | ELSE LBRACE Block RBRACE

   17 Condition: Expr SIGN Expr ConditionTail

   18 ConditionTail: ε
   19              | CONJUNCTION Condition

   20 SIGN: GREATER_THAN
   21     | LESS_THAN
   22     | EQUAL_TO
   23     | GREATER_THAN_EQUAL_TO
   24     | LESS_THAN_EQUAL_TO
   25     | NOT_EQUAL_TO

   26 CONJUNCTION: AND
   27            | OR

   28 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

   29 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON

   30 ParamList: ε
   31          | ParamTail

   32 ParamTail: Param
   33          | Param COMMA ParamTail

   34 Param: Type ID
   35      | Type ID LBRACKET RBRACKET

   36 ArgList: ε
   37        | ArgTail

   38 ArgTail: Expr
   39        | Expr COMMA ArgTail

   40 Block: BlockStmtList ReturnStmt
   41      | BlockStmtList

   42 BlockStmtList: ε
   43              | BlockStmt BlockStmtList

   44 BlockStmt: Declaration
   45          | DeclarationAssignment
   46          | Assignment
   47          | Print
   48          | FunctionCall
   49          | IfBlock

   50 ReturnStmt: RETURN Expr SEMICOLON

   51 Declaration: Type ID SEMICOLON
   52            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   53 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON

   54 Type: INT
   55     | FLOAT
   56     | BOOL
   57     | VOID

   58 Assignment: ID ASSIGN Expr SEMICOLON
   59           | ID ASSIGN FunctionCall
   60           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   61           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall

   62 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   63 Expr: Expr PLUS Term
   64     | Expr MINUS Term
   65     | Term

   66 Term: Term MULT Factor
   67     | Term DIV Factor
   68     | Factor

   69 Factor: LPAREN Expr RPAREN
   70       | ID
   71       | ID LBRACKET Expr RBRACKET
   72       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 28 29 34 35 51 52 53 58 59 60 61 70 71
    INT <string> (259) 54
    FLOAT <string> (260) 55
    BOOL <string> (261) 56
    VOID <string> (262) 57
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 62
    IF <string> (266) 12
    ELSE <string> (267) 16
    ELSE_IF <string> (268) 14
    WHILE <string> (269)
    RETURN <string> (270) 50
    SEMICOLON <character> (271) 29 50 51 52 53 58 60 62
    COMMA <character> (272) 33 39
    LPAREN <character> (273) 12 14 28 29 62 69
    RPAREN <character> (274) 12 14 28 29 62 69
    LBRACE <character> (275) 12 14 16 28
    RBRACE <character> (276) 12 14 16 28
    LBRACKET <character> (277) 35 52 60 61 71
    RBRACKET <character> (278) 35 52 60 61 71
    ASSIGN <op> (279) 53 58 59 60 61
    PLUS <op> (280) 63
    MINUS <op> (281) 64
    MULT <op> (282) 66
    DIV <op> (283) 67
    GREATER_THAN <stringOp> (284) 20
    LESS_THAN <stringOp> (285) 21
    EQUAL_TO <stringOp> (286) 22
    GREATER_THAN_EQUAL_TO <stringOp> (287) 23
    LESS_THAN_EQUAL_TO <stringOp> (288) 24
    AND <stringOp> (289) 26
    OR <stringOp> (290) 27
    NOT_EQUAL_TO <stringOp> (291) 25
    NUMBER <number> (292) 72


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    Program <node> (39)
        on left: 1
        on right: 0
    StmtList <node> (40)
        on left: 2 3
        on right: 1 3
    Stmt <node> (41)
        on left: 4 5 6 7 8 9 10
        on right: 3
    IfBlock <node> (42)
        on left: 11
        on right: 10 49
    IfStmt <node> (43)
        on left: 12
        on right: 11
    ElseIfStmt <node> (44)
        on left: 13 14
        on right: 11 14
    ElseStmt <node> (45)
        on left: 15 16
        on right: 11
    Condition <node> (46)
        on left: 17
        on right: 12 14 19
    ConditionTail <node> (47)
        on left: 18 19
        on right: 17
    SIGN <node> (48)
        on left: 20 21 22 23 24 25
        on right: 17
    CONJUNCTION <node> (49)
        on left: 26 27
        on right: 19
    FunctionDeclaration <node> (50)
        on left: 28
        on right: 9
    FunctionCall <node> (51)
        on left: 29
        on right: 8 48 59 61
    ParamList <node> (52)
        on left: 30 31
        on right: 28
    ParamTail <node> (53)
        on left: 32 33
        on right: 31 33
    Param <node> (54)
        on left: 34 35
        on right: 32 33
    ArgList <node> (55)
        on left: 36 37
        on right: 29
    ArgTail <node> (56)
        on left: 38 39
        on right: 37 39
    Block <node> (57)
        on left: 40 41
        on right: 12 14 16 28
    BlockStmtList <node> (58)
        on left: 42 43
        on right: 40 41 43
    BlockStmt <node> (59)
        on left: 44 45 46 47 48 49
        on right: 43
    ReturnStmt <node> (60)
        on left: 50
        on right: 40
    Declaration <node> (61)
        on left: 51 52
        on right: 4 44
    DeclarationAssignment <node> (62)
        on left: 53
        on right: 5 45
    Type <node> (63)
        on left: 54 55 56 57
        on right: 28 34 35 51 52 53
    Assignment <node> (64)
        on left: 58 59 60 61
        on right: 6 46
    Print <node> (65)
        on left: 62
        on right: 7 47
    Expr <node> (66)
        on left: 63 64 65
        on right: 17 38 39 50 52 53 58 60 61 62 63 64 69 71
    Term <node> (67)
        on left: 66 67 68
        on right: 63 64 65 66 67
    Factor <node> (68)
        on left: 69 70 71 72
        on right: 66 67 68


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    Program                go to state 8
    StmtList               go to state 9
    Stmt                   go to state 10
    IfBlock                go to state 11
    IfStmt                 go to state 12
    FunctionDeclaration    go to state 13
    FunctionCall           go to state 14
    Declaration            go to state 15
    DeclarationAssignment  go to state 16
    Type                   go to state 17
    Assignment             go to state 18
    Print                  go to state 19


State 1

   29 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   58 Assignment: ID • ASSIGN Expr SEMICOLON
   59           | ID • ASSIGN FunctionCall
   60           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   61           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall

    LPAREN    shift, and go to state 20
    LBRACKET  shift, and go to state 21
    ASSIGN    shift, and go to state 22


State 2

   54 Type: INT •

    $default  reduce using rule 54 (Type)


State 3

   55 Type: FLOAT •

    $default  reduce using rule 55 (Type)


State 4

   56 Type: BOOL •

    $default  reduce using rule 56 (Type)


State 5

   57 Type: VOID •

    $default  reduce using rule 57 (Type)


State 6

   62 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 23


State 7

   12 IfStmt: IF • LPAREN Condition RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 24


State 8

    0 $accept: Program • $end

    $end  shift, and go to state 25


State 9

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 10

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    StmtList               go to state 26
    Stmt                   go to state 10
    IfBlock                go to state 11
    IfStmt                 go to state 12
    FunctionDeclaration    go to state 13
    FunctionCall           go to state 14
    Declaration            go to state 15
    DeclarationAssignment  go to state 16
    Type                   go to state 17
    Assignment             go to state 18
    Print                  go to state 19


State 11

   10 Stmt: IfBlock •

    $default  reduce using rule 10 (Stmt)


State 12

   11 IfBlock: IfStmt • ElseIfStmt ElseStmt

    ELSE_IF  shift, and go to state 27

    $default  reduce using rule 13 (ElseIfStmt)

    ElseIfStmt  go to state 28


State 13

    9 Stmt: FunctionDeclaration •

    $default  reduce using rule 9 (Stmt)


State 14

    8 Stmt: FunctionCall •

    $default  reduce using rule 8 (Stmt)


State 15

    4 Stmt: Declaration •

    $default  reduce using rule 4 (Stmt)


State 16

    5 Stmt: DeclarationAssignment •

    $default  reduce using rule 5 (Stmt)


State 17

   28 FunctionDeclaration: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   51 Declaration: Type • ID SEMICOLON
   52            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   53 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 29


State 18

    6 Stmt: Assignment •

    $default  reduce using rule 6 (Stmt)


State 19

    7 Stmt: Print •

    $default  reduce using rule 7 (Stmt)


State 20

   29 FunctionCall: ID LPAREN • ArgList RPAREN SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    $default  reduce using rule 36 (ArgList)

    ArgList  go to state 33
    ArgTail  go to state 34
    Expr     go to state 35
    Term     go to state 36
    Factor   go to state 37


State 21

   60 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   61           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 38
    Term    go to state 36
    Factor  go to state 37


State 22

   58 Assignment: ID ASSIGN • Expr SEMICOLON
   59           | ID ASSIGN • FunctionCall

    ID      shift, and go to state 39
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    FunctionCall  go to state 40
    Expr          go to state 41
    Term          go to state 36
    Factor        go to state 37


State 23

   62 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 42
    Term    go to state 36
    Factor  go to state 37


State 24

   12 IfStmt: IF LPAREN • Condition RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Condition  go to state 43
    Expr       go to state 44
    Term       go to state 36
    Factor     go to state 37


State 25

    0 $accept: Program $end •

    $default  accept


State 26

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 27

   14 ElseIfStmt: ELSE_IF • LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    LPAREN  shift, and go to state 45


State 28

   11 IfBlock: IfStmt ElseIfStmt • ElseStmt

    ELSE  shift, and go to state 46

    $default  reduce using rule 15 (ElseStmt)

    ElseStmt  go to state 47


State 29

   28 FunctionDeclaration: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   51 Declaration: Type ID • SEMICOLON
   52            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   53 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 48
    LPAREN     shift, and go to state 49
    LBRACKET   shift, and go to state 50
    ASSIGN     shift, and go to state 51


State 30

   70 Factor: ID •
   71       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 52

    $default  reduce using rule 70 (Factor)


State 31

   69 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 53
    Term    go to state 36
    Factor  go to state 37


State 32

   72 Factor: NUMBER •

    $default  reduce using rule 72 (Factor)


State 33

   29 FunctionCall: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 54


State 34

   37 ArgList: ArgTail •

    $default  reduce using rule 37 (ArgList)


State 35

   38 ArgTail: Expr •
   39        | Expr • COMMA ArgTail
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    COMMA  shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 38 (ArgTail)


State 36

   65 Expr: Term •
   66 Term: Term • MULT Factor
   67     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 65 (Expr)


State 37

   68 Term: Factor •

    $default  reduce using rule 68 (Term)


State 38

   60 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   61           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    RBRACKET  shift, and go to state 60
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 39

   29 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   70 Factor: ID •
   71       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 20
    LBRACKET  shift, and go to state 52

    $default  reduce using rule 70 (Factor)


State 40

   59 Assignment: ID ASSIGN FunctionCall •

    $default  reduce using rule 59 (Assignment)


State 41

   58 Assignment: ID ASSIGN Expr • SEMICOLON
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 61
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 42

   62 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    RPAREN  shift, and go to state 62
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57


State 43

   12 IfStmt: IF LPAREN Condition • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 63


State 44

   17 Condition: Expr • SIGN Expr ConditionTail
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    PLUS                   shift, and go to state 56
    MINUS                  shift, and go to state 57
    GREATER_THAN           shift, and go to state 64
    LESS_THAN              shift, and go to state 65
    EQUAL_TO               shift, and go to state 66
    GREATER_THAN_EQUAL_TO  shift, and go to state 67
    LESS_THAN_EQUAL_TO     shift, and go to state 68
    NOT_EQUAL_TO           shift, and go to state 69

    SIGN  go to state 70


State 45

   14 ElseIfStmt: ELSE_IF LPAREN • Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Condition  go to state 71
    Expr       go to state 44
    Term       go to state 36
    Factor     go to state 37


State 46

   16 ElseStmt: ELSE • LBRACE Block RBRACE

    LBRACE  shift, and go to state 72


State 47

   11 IfBlock: IfStmt ElseIfStmt ElseStmt •

    $default  reduce using rule 11 (IfBlock)


State 48

   51 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 51 (Declaration)


State 49

   28 FunctionDeclaration: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 30 (ParamList)

    ParamList  go to state 73
    ParamTail  go to state 74
    Param      go to state 75
    Type       go to state 76


State 50

   52 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 77
    Term    go to state 36
    Factor  go to state 37


State 51

   53 DeclarationAssignment: Type ID ASSIGN • Expr SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 78
    Term    go to state 36
    Factor  go to state 37


State 52

   71 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 79
    Term    go to state 36
    Factor  go to state 37


State 53

   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term
   69 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 80
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57


State 54

   29 FunctionCall: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 81


State 55

   39 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    ArgTail  go to state 82
    Expr     go to state 35
    Term     go to state 36
    Factor   go to state 37


State 56

   63 Expr: Expr PLUS • Term

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Term    go to state 83
    Factor  go to state 37


State 57

   64 Expr: Expr MINUS • Term

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Term    go to state 84
    Factor  go to state 37


State 58

   66 Term: Term MULT • Factor

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Factor  go to state 85


State 59

   67 Term: Term DIV • Factor

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Factor  go to state 86


State 60

   60 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   61           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall

    ASSIGN  shift, and go to state 87


State 61

   58 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 58 (Assignment)


State 62

   62 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 63

   12 IfStmt: IF LPAREN Condition RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 89


State 64

   20 SIGN: GREATER_THAN •

    $default  reduce using rule 20 (SIGN)


State 65

   21 SIGN: LESS_THAN •

    $default  reduce using rule 21 (SIGN)


State 66

   22 SIGN: EQUAL_TO •

    $default  reduce using rule 22 (SIGN)


State 67

   23 SIGN: GREATER_THAN_EQUAL_TO •

    $default  reduce using rule 23 (SIGN)


State 68

   24 SIGN: LESS_THAN_EQUAL_TO •

    $default  reduce using rule 24 (SIGN)


State 69

   25 SIGN: NOT_EQUAL_TO •

    $default  reduce using rule 25 (SIGN)


State 70

   17 Condition: Expr SIGN • Expr ConditionTail

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 90
    Term    go to state 36
    Factor  go to state 37


State 71

   14 ElseIfStmt: ELSE_IF LPAREN Condition • RPAREN LBRACE Block RBRACE ElseIfStmt

    RPAREN  shift, and go to state 91


State 72

   16 ElseStmt: ELSE LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 42 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 94
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 73

   28 FunctionDeclaration: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 102


State 74

   31 ParamList: ParamTail •

    $default  reduce using rule 31 (ParamList)


State 75

   32 ParamTail: Param •
   33          | Param • COMMA ParamTail

    COMMA  shift, and go to state 103

    $default  reduce using rule 32 (ParamTail)


State 76

   34 Param: Type • ID
   35      | Type • ID LBRACKET RBRACKET

    ID  shift, and go to state 104


State 77

   52 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    RBRACKET  shift, and go to state 105
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 78

   53 DeclarationAssignment: Type ID ASSIGN Expr • SEMICOLON
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 106
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 79

   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term
   71 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 107
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 80

   69 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 69 (Factor)


State 81

   29 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 29 (FunctionCall)


State 82

   39 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 39 (ArgTail)


State 83

   63 Expr: Expr PLUS Term •
   66 Term: Term • MULT Factor
   67     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 63 (Expr)


State 84

   64 Expr: Expr MINUS Term •
   66 Term: Term • MULT Factor
   67     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 64 (Expr)


State 85

   66 Term: Term MULT Factor •

    $default  reduce using rule 66 (Term)


State 86

   67 Term: Term DIV Factor •

    $default  reduce using rule 67 (Term)


State 87

   60 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   61           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall

    ID      shift, and go to state 39
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    FunctionCall  go to state 108
    Expr          go to state 109
    Term          go to state 36
    Factor        go to state 37


State 88

   62 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 62 (Print)


State 89

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 42 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 110
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 90

   17 Condition: Expr SIGN Expr • ConditionTail
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57
    AND    shift, and go to state 111
    OR     shift, and go to state 112

    $default  reduce using rule 18 (ConditionTail)

    ConditionTail  go to state 113
    CONJUNCTION    go to state 114


State 91

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN • LBRACE Block RBRACE ElseIfStmt

    LBRACE  shift, and go to state 115


State 92

   49 BlockStmt: IfBlock •

    $default  reduce using rule 49 (BlockStmt)


State 93

   48 BlockStmt: FunctionCall •

    $default  reduce using rule 48 (BlockStmt)


State 94

   16 ElseStmt: ELSE LBRACE Block • RBRACE

    RBRACE  shift, and go to state 116


State 95

   40 Block: BlockStmtList • ReturnStmt
   41      | BlockStmtList •

    RETURN  shift, and go to state 117

    $default  reduce using rule 41 (Block)

    ReturnStmt  go to state 118


State 96

   43 BlockStmtList: BlockStmt • BlockStmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 42 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    BlockStmtList          go to state 119
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 97

   44 BlockStmt: Declaration •

    $default  reduce using rule 44 (BlockStmt)


State 98

   45 BlockStmt: DeclarationAssignment •

    $default  reduce using rule 45 (BlockStmt)


State 99

   51 Declaration: Type • ID SEMICOLON
   52            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   53 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 120


State 100

   46 BlockStmt: Assignment •

    $default  reduce using rule 46 (BlockStmt)


State 101

   47 BlockStmt: Print •

    $default  reduce using rule 47 (BlockStmt)


State 102

   28 FunctionDeclaration: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 121


State 103

   33 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 122
    Param      go to state 75
    Type       go to state 76


State 104

   34 Param: Type ID •
   35      | Type ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 123

    $default  reduce using rule 34 (Param)


State 105

   52 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 124


State 106

   53 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 53 (DeclarationAssignment)


State 107

   71 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 71 (Factor)


State 108

   61 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall •

    $default  reduce using rule 61 (Assignment)


State 109

   60 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 125
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 110

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 126


State 111

   26 CONJUNCTION: AND •

    $default  reduce using rule 26 (CONJUNCTION)


State 112

   27 CONJUNCTION: OR •

    $default  reduce using rule 27 (CONJUNCTION)


State 113

   17 Condition: Expr SIGN Expr ConditionTail •

    $default  reduce using rule 17 (Condition)


State 114

   19 ConditionTail: CONJUNCTION • Condition

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Condition  go to state 127
    Expr       go to state 44
    Term       go to state 36
    Factor     go to state 37


State 115

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE • Block RBRACE ElseIfStmt

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 42 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 128
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 116

   16 ElseStmt: ELSE LBRACE Block RBRACE •

    $default  reduce using rule 16 (ElseStmt)


State 117

   50 ReturnStmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 129
    Term    go to state 36
    Factor  go to state 37


State 118

   40 Block: BlockStmtList ReturnStmt •

    $default  reduce using rule 40 (Block)


State 119

   43 BlockStmtList: BlockStmt BlockStmtList •

    $default  reduce using rule 43 (BlockStmtList)


State 120

   51 Declaration: Type ID • SEMICOLON
   52            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   53 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 48
    LBRACKET   shift, and go to state 50
    ASSIGN     shift, and go to state 51


State 121

   28 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 42 (BlockStmtList)

    IfBlock                go to state 92
    IfStmt                 go to state 12
    FunctionCall           go to state 93
    Block                  go to state 130
    BlockStmtList          go to state 95
    BlockStmt              go to state 96
    Declaration            go to state 97
    DeclarationAssignment  go to state 98
    Type                   go to state 99
    Assignment             go to state 100
    Print                  go to state 101


State 122

   33 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 33 (ParamTail)


State 123

   35 Param: Type ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 131


State 124

   52 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 52 (Declaration)


State 125

   60 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 60 (Assignment)


State 126

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 12 (IfStmt)


State 127

   19 ConditionTail: CONJUNCTION Condition •

    $default  reduce using rule 19 (ConditionTail)


State 128

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block • RBRACE ElseIfStmt

    RBRACE  shift, and go to state 132


State 129

   50 ReturnStmt: RETURN Expr • SEMICOLON
   63 Expr: Expr • PLUS Term
   64     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 133
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 130

   28 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 134


State 131

   35 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 35 (Param)


State 132

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE • ElseIfStmt

    ELSE_IF  shift, and go to state 27

    $default  reduce using rule 13 (ElseIfStmt)

    ElseIfStmt  go to state 135


State 133

   50 ReturnStmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 50 (ReturnStmt)


State 134

   28 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 28 (FunctionDeclaration)


State 135

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt •

    $default  reduce using rule 14 (ElseIfStmt)
