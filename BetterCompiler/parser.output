Terminals unused in grammar

    TRUE
    FALSE
    WHILE
    AND
    OR


Grammar

    0 $accept: Program $end

    1 Program: StmtList

    2 StmtList: ε
    3         | Stmt StmtList

    4 Stmt: Declaration
    5     | DeclarationAssignment
    6     | Assignment
    7     | Print
    8     | FunctionCall
    9     | FunctionDeclaration
   10     | IfBlock

   11 IfBlock: IfStmt ElseIfStmt ElseStmt

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE

   13 ElseIfStmt: ε
   14           | ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

   15 ElseStmt: ε
   16         | ELSE LBRACE Block RBRACE

   17 Condition: Expr SIGN Expr

   18 SIGN: GREATER_THAN
   19     | LESS_THAN
   20     | EQUAL_TO
   21     | GREATER_THAN_EQUAL_TO
   22     | LESS_THAN_EQUAL_TO

   23 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE

   24 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON

   25 ParamList: ε
   26          | ParamTail

   27 ParamTail: Param
   28          | Param COMMA ParamTail

   29 Param: Type ID
   30      | Type ID LBRACKET RBRACKET

   31 ArgList: ε
   32        | ArgTail

   33 ArgTail: Expr
   34        | Expr COMMA ArgTail

   35 Block: BlockStmtList ReturnStmt
   36      | BlockStmtList

   37 BlockStmtList: ε
   38              | BlockStmt BlockStmtList

   39 BlockStmt: Declaration
   40          | DeclarationAssignment
   41          | Assignment
   42          | Print
   43          | FunctionCall
   44          | IfBlock

   45 ReturnStmt: RETURN Expr SEMICOLON

   46 Declaration: Type ID SEMICOLON
   47            | Type ID LBRACKET Expr RBRACKET SEMICOLON

   48 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON

   49 Type: INT
   50     | FLOAT
   51     | BOOL
   52     | VOID

   53 Assignment: ID ASSIGN Expr SEMICOLON
   54           | ID ASSIGN FunctionCall
   55           | ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   56           | ID LBRACKET Expr RBRACKET ASSIGN FunctionCall

   57 Print: PRINT LPAREN Expr RPAREN SEMICOLON

   58 Expr: Expr PLUS Term
   59     | Expr MINUS Term
   60     | Term

   61 Term: Term MULT Factor
   62     | Term DIV Factor
   63     | Factor

   64 Factor: LPAREN Expr RPAREN
   65       | ID
   66       | ID LBRACKET Expr RBRACKET
   67       | NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <string> (258) 23 24 29 30 46 47 48 53 54 55 56 65 66
    INT <string> (259) 49
    FLOAT <string> (260) 50
    BOOL <string> (261) 51
    VOID <string> (262) 52
    TRUE <string> (263)
    FALSE <string> (264)
    PRINT <string> (265) 57
    IF <string> (266) 12
    ELSE <string> (267) 16
    ELSE_IF <string> (268) 14
    WHILE <string> (269)
    RETURN <string> (270) 45
    SEMICOLON <character> (271) 24 45 46 47 48 53 55 57
    COMMA <character> (272) 28 34
    LPAREN <character> (273) 12 14 23 24 57 64
    RPAREN <character> (274) 12 14 23 24 57 64
    LBRACE <character> (275) 12 14 16 23
    RBRACE <character> (276) 12 14 16 23
    LBRACKET <character> (277) 30 47 55 56 66
    RBRACKET <character> (278) 30 47 55 56 66
    ASSIGN <op> (279) 48 53 54 55 56
    PLUS <op> (280) 58
    MINUS <op> (281) 59
    MULT <op> (282) 61
    DIV <op> (283) 62
    GREATER_THAN <stringOp> (284) 18
    LESS_THAN <stringOp> (285) 19
    EQUAL_TO <stringOp> (286) 20
    GREATER_THAN_EQUAL_TO <stringOp> (287) 21
    LESS_THAN_EQUAL_TO <stringOp> (288) 22
    AND <stringOp> (289)
    OR <stringOp> (290)
    NUMBER <number> (291) 67


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    Program <node> (38)
        on left: 1
        on right: 0
    StmtList <node> (39)
        on left: 2 3
        on right: 1 3
    Stmt <node> (40)
        on left: 4 5 6 7 8 9 10
        on right: 3
    IfBlock <node> (41)
        on left: 11
        on right: 10 44
    IfStmt <node> (42)
        on left: 12
        on right: 11
    ElseIfStmt <node> (43)
        on left: 13 14
        on right: 11 14
    ElseStmt <node> (44)
        on left: 15 16
        on right: 11
    Condition <node> (45)
        on left: 17
        on right: 12 14
    SIGN <node> (46)
        on left: 18 19 20 21 22
        on right: 17
    FunctionDeclaration <node> (47)
        on left: 23
        on right: 9
    FunctionCall <node> (48)
        on left: 24
        on right: 8 43 54 56
    ParamList <node> (49)
        on left: 25 26
        on right: 23
    ParamTail <node> (50)
        on left: 27 28
        on right: 26 28
    Param <node> (51)
        on left: 29 30
        on right: 27 28
    ArgList <node> (52)
        on left: 31 32
        on right: 24
    ArgTail <node> (53)
        on left: 33 34
        on right: 32 34
    Block <node> (54)
        on left: 35 36
        on right: 12 14 16 23
    BlockStmtList <node> (55)
        on left: 37 38
        on right: 35 36 38
    BlockStmt <node> (56)
        on left: 39 40 41 42 43 44
        on right: 38
    ReturnStmt <node> (57)
        on left: 45
        on right: 35
    Declaration <node> (58)
        on left: 46 47
        on right: 4 39
    DeclarationAssignment <node> (59)
        on left: 48
        on right: 5 40
    Type <node> (60)
        on left: 49 50 51 52
        on right: 23 29 30 46 47 48
    Assignment <node> (61)
        on left: 53 54 55 56
        on right: 6 41
    Print <node> (62)
        on left: 57
        on right: 7 42
    Expr <node> (63)
        on left: 58 59 60
        on right: 17 33 34 45 47 48 53 55 56 57 58 59 64 66
    Term <node> (64)
        on left: 61 62 63
        on right: 58 59 60 61 62
    Factor <node> (65)
        on left: 64 65 66 67
        on right: 61 62 63


State 0

    0 $accept: • Program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    Program                go to state 8
    StmtList               go to state 9
    Stmt                   go to state 10
    IfBlock                go to state 11
    IfStmt                 go to state 12
    FunctionDeclaration    go to state 13
    FunctionCall           go to state 14
    Declaration            go to state 15
    DeclarationAssignment  go to state 16
    Type                   go to state 17
    Assignment             go to state 18
    Print                  go to state 19


State 1

   24 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   53 Assignment: ID • ASSIGN Expr SEMICOLON
   54           | ID • ASSIGN FunctionCall
   55           | ID • LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON
   56           | ID • LBRACKET Expr RBRACKET ASSIGN FunctionCall

    LPAREN    shift, and go to state 20
    LBRACKET  shift, and go to state 21
    ASSIGN    shift, and go to state 22


State 2

   49 Type: INT •

    $default  reduce using rule 49 (Type)


State 3

   50 Type: FLOAT •

    $default  reduce using rule 50 (Type)


State 4

   51 Type: BOOL •

    $default  reduce using rule 51 (Type)


State 5

   52 Type: VOID •

    $default  reduce using rule 52 (Type)


State 6

   57 Print: PRINT • LPAREN Expr RPAREN SEMICOLON

    LPAREN  shift, and go to state 23


State 7

   12 IfStmt: IF • LPAREN Condition RPAREN LBRACE Block RBRACE

    LPAREN  shift, and go to state 24


State 8

    0 $accept: Program • $end

    $end  shift, and go to state 25


State 9

    1 Program: StmtList •

    $default  reduce using rule 1 (Program)


State 10

    3 StmtList: Stmt • StmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 2 (StmtList)

    StmtList               go to state 26
    Stmt                   go to state 10
    IfBlock                go to state 11
    IfStmt                 go to state 12
    FunctionDeclaration    go to state 13
    FunctionCall           go to state 14
    Declaration            go to state 15
    DeclarationAssignment  go to state 16
    Type                   go to state 17
    Assignment             go to state 18
    Print                  go to state 19


State 11

   10 Stmt: IfBlock •

    $default  reduce using rule 10 (Stmt)


State 12

   11 IfBlock: IfStmt • ElseIfStmt ElseStmt

    ELSE_IF  shift, and go to state 27

    $default  reduce using rule 13 (ElseIfStmt)

    ElseIfStmt  go to state 28


State 13

    9 Stmt: FunctionDeclaration •

    $default  reduce using rule 9 (Stmt)


State 14

    8 Stmt: FunctionCall •

    $default  reduce using rule 8 (Stmt)


State 15

    4 Stmt: Declaration •

    $default  reduce using rule 4 (Stmt)


State 16

    5 Stmt: DeclarationAssignment •

    $default  reduce using rule 5 (Stmt)


State 17

   23 FunctionDeclaration: Type • ID LPAREN ParamList RPAREN LBRACE Block RBRACE
   46 Declaration: Type • ID SEMICOLON
   47            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   48 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 29


State 18

    6 Stmt: Assignment •

    $default  reduce using rule 6 (Stmt)


State 19

    7 Stmt: Print •

    $default  reduce using rule 7 (Stmt)


State 20

   24 FunctionCall: ID LPAREN • ArgList RPAREN SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    $default  reduce using rule 31 (ArgList)

    ArgList  go to state 33
    ArgTail  go to state 34
    Expr     go to state 35
    Term     go to state 36
    Factor   go to state 37


State 21

   55 Assignment: ID LBRACKET • Expr RBRACKET ASSIGN Expr SEMICOLON
   56           | ID LBRACKET • Expr RBRACKET ASSIGN FunctionCall

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 38
    Term    go to state 36
    Factor  go to state 37


State 22

   53 Assignment: ID ASSIGN • Expr SEMICOLON
   54           | ID ASSIGN • FunctionCall

    ID      shift, and go to state 39
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    FunctionCall  go to state 40
    Expr          go to state 41
    Term          go to state 36
    Factor        go to state 37


State 23

   57 Print: PRINT LPAREN • Expr RPAREN SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 42
    Term    go to state 36
    Factor  go to state 37


State 24

   12 IfStmt: IF LPAREN • Condition RPAREN LBRACE Block RBRACE

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Condition  go to state 43
    Expr       go to state 44
    Term       go to state 36
    Factor     go to state 37


State 25

    0 $accept: Program $end •

    $default  accept


State 26

    3 StmtList: Stmt StmtList •

    $default  reduce using rule 3 (StmtList)


State 27

   14 ElseIfStmt: ELSE_IF • LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    LPAREN  shift, and go to state 45


State 28

   11 IfBlock: IfStmt ElseIfStmt • ElseStmt

    ELSE  shift, and go to state 46

    $default  reduce using rule 15 (ElseStmt)

    ElseStmt  go to state 47


State 29

   23 FunctionDeclaration: Type ID • LPAREN ParamList RPAREN LBRACE Block RBRACE
   46 Declaration: Type ID • SEMICOLON
   47            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   48 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 48
    LPAREN     shift, and go to state 49
    LBRACKET   shift, and go to state 50
    ASSIGN     shift, and go to state 51


State 30

   65 Factor: ID •
   66       | ID • LBRACKET Expr RBRACKET

    LBRACKET  shift, and go to state 52

    $default  reduce using rule 65 (Factor)


State 31

   64 Factor: LPAREN • Expr RPAREN

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 53
    Term    go to state 36
    Factor  go to state 37


State 32

   67 Factor: NUMBER •

    $default  reduce using rule 67 (Factor)


State 33

   24 FunctionCall: ID LPAREN ArgList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 54


State 34

   32 ArgList: ArgTail •

    $default  reduce using rule 32 (ArgList)


State 35

   33 ArgTail: Expr •
   34        | Expr • COMMA ArgTail
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    COMMA  shift, and go to state 55
    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 33 (ArgTail)


State 36

   60 Expr: Term •
   61 Term: Term • MULT Factor
   62     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 60 (Expr)


State 37

   63 Term: Factor •

    $default  reduce using rule 63 (Term)


State 38

   55 Assignment: ID LBRACKET Expr • RBRACKET ASSIGN Expr SEMICOLON
   56           | ID LBRACKET Expr • RBRACKET ASSIGN FunctionCall
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    RBRACKET  shift, and go to state 60
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 39

   24 FunctionCall: ID • LPAREN ArgList RPAREN SEMICOLON
   65 Factor: ID •
   66       | ID • LBRACKET Expr RBRACKET

    LPAREN    shift, and go to state 20
    LBRACKET  shift, and go to state 52

    $default  reduce using rule 65 (Factor)


State 40

   54 Assignment: ID ASSIGN FunctionCall •

    $default  reduce using rule 54 (Assignment)


State 41

   53 Assignment: ID ASSIGN Expr • SEMICOLON
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 61
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 42

   57 Print: PRINT LPAREN Expr • RPAREN SEMICOLON
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    RPAREN  shift, and go to state 62
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57


State 43

   12 IfStmt: IF LPAREN Condition • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 63


State 44

   17 Condition: Expr • SIGN Expr
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    PLUS                   shift, and go to state 56
    MINUS                  shift, and go to state 57
    GREATER_THAN           shift, and go to state 64
    LESS_THAN              shift, and go to state 65
    EQUAL_TO               shift, and go to state 66
    GREATER_THAN_EQUAL_TO  shift, and go to state 67
    LESS_THAN_EQUAL_TO     shift, and go to state 68

    SIGN  go to state 69


State 45

   14 ElseIfStmt: ELSE_IF LPAREN • Condition RPAREN LBRACE Block RBRACE ElseIfStmt

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Condition  go to state 70
    Expr       go to state 44
    Term       go to state 36
    Factor     go to state 37


State 46

   16 ElseStmt: ELSE • LBRACE Block RBRACE

    LBRACE  shift, and go to state 71


State 47

   11 IfBlock: IfStmt ElseIfStmt ElseStmt •

    $default  reduce using rule 11 (IfBlock)


State 48

   46 Declaration: Type ID SEMICOLON •

    $default  reduce using rule 46 (Declaration)


State 49

   23 FunctionDeclaration: Type ID LPAREN • ParamList RPAREN LBRACE Block RBRACE

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    $default  reduce using rule 25 (ParamList)

    ParamList  go to state 72
    ParamTail  go to state 73
    Param      go to state 74
    Type       go to state 75


State 50

   47 Declaration: Type ID LBRACKET • Expr RBRACKET SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 76
    Term    go to state 36
    Factor  go to state 37


State 51

   48 DeclarationAssignment: Type ID ASSIGN • Expr SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 77
    Term    go to state 36
    Factor  go to state 37


State 52

   66 Factor: ID LBRACKET • Expr RBRACKET

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 78
    Term    go to state 36
    Factor  go to state 37


State 53

   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term
   64 Factor: LPAREN Expr • RPAREN

    RPAREN  shift, and go to state 79
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57


State 54

   24 FunctionCall: ID LPAREN ArgList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 55

   34 ArgTail: Expr COMMA • ArgTail

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    ArgTail  go to state 81
    Expr     go to state 35
    Term     go to state 36
    Factor   go to state 37


State 56

   58 Expr: Expr PLUS • Term

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Term    go to state 82
    Factor  go to state 37


State 57

   59 Expr: Expr MINUS • Term

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Term    go to state 83
    Factor  go to state 37


State 58

   61 Term: Term MULT • Factor

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Factor  go to state 84


State 59

   62 Term: Term DIV • Factor

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Factor  go to state 85


State 60

   55 Assignment: ID LBRACKET Expr RBRACKET • ASSIGN Expr SEMICOLON
   56           | ID LBRACKET Expr RBRACKET • ASSIGN FunctionCall

    ASSIGN  shift, and go to state 86


State 61

   53 Assignment: ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 53 (Assignment)


State 62

   57 Print: PRINT LPAREN Expr RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 63

   12 IfStmt: IF LPAREN Condition RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 88


State 64

   18 SIGN: GREATER_THAN •

    $default  reduce using rule 18 (SIGN)


State 65

   19 SIGN: LESS_THAN •

    $default  reduce using rule 19 (SIGN)


State 66

   20 SIGN: EQUAL_TO •

    $default  reduce using rule 20 (SIGN)


State 67

   21 SIGN: GREATER_THAN_EQUAL_TO •

    $default  reduce using rule 21 (SIGN)


State 68

   22 SIGN: LESS_THAN_EQUAL_TO •

    $default  reduce using rule 22 (SIGN)


State 69

   17 Condition: Expr SIGN • Expr

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 89
    Term    go to state 36
    Factor  go to state 37


State 70

   14 ElseIfStmt: ELSE_IF LPAREN Condition • RPAREN LBRACE Block RBRACE ElseIfStmt

    RPAREN  shift, and go to state 90


State 71

   16 ElseStmt: ELSE LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 37 (BlockStmtList)

    IfBlock                go to state 91
    IfStmt                 go to state 12
    FunctionCall           go to state 92
    Block                  go to state 93
    BlockStmtList          go to state 94
    BlockStmt              go to state 95
    Declaration            go to state 96
    DeclarationAssignment  go to state 97
    Type                   go to state 98
    Assignment             go to state 99
    Print                  go to state 100


State 72

   23 FunctionDeclaration: Type ID LPAREN ParamList • RPAREN LBRACE Block RBRACE

    RPAREN  shift, and go to state 101


State 73

   26 ParamList: ParamTail •

    $default  reduce using rule 26 (ParamList)


State 74

   27 ParamTail: Param •
   28          | Param • COMMA ParamTail

    COMMA  shift, and go to state 102

    $default  reduce using rule 27 (ParamTail)


State 75

   29 Param: Type • ID
   30      | Type • ID LBRACKET RBRACKET

    ID  shift, and go to state 103


State 76

   47 Declaration: Type ID LBRACKET Expr • RBRACKET SEMICOLON
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    RBRACKET  shift, and go to state 104
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 77

   48 DeclarationAssignment: Type ID ASSIGN Expr • SEMICOLON
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 105
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 78

   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term
   66 Factor: ID LBRACKET Expr • RBRACKET

    RBRACKET  shift, and go to state 106
    PLUS      shift, and go to state 56
    MINUS     shift, and go to state 57


State 79

   64 Factor: LPAREN Expr RPAREN •

    $default  reduce using rule 64 (Factor)


State 80

   24 FunctionCall: ID LPAREN ArgList RPAREN SEMICOLON •

    $default  reduce using rule 24 (FunctionCall)


State 81

   34 ArgTail: Expr COMMA ArgTail •

    $default  reduce using rule 34 (ArgTail)


State 82

   58 Expr: Expr PLUS Term •
   61 Term: Term • MULT Factor
   62     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 58 (Expr)


State 83

   59 Expr: Expr MINUS Term •
   61 Term: Term • MULT Factor
   62     | Term • DIV Factor

    MULT  shift, and go to state 58
    DIV   shift, and go to state 59

    $default  reduce using rule 59 (Expr)


State 84

   61 Term: Term MULT Factor •

    $default  reduce using rule 61 (Term)


State 85

   62 Term: Term DIV Factor •

    $default  reduce using rule 62 (Term)


State 86

   55 Assignment: ID LBRACKET Expr RBRACKET ASSIGN • Expr SEMICOLON
   56           | ID LBRACKET Expr RBRACKET ASSIGN • FunctionCall

    ID      shift, and go to state 39
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    FunctionCall  go to state 107
    Expr          go to state 108
    Term          go to state 36
    Factor        go to state 37


State 87

   57 Print: PRINT LPAREN Expr RPAREN SEMICOLON •

    $default  reduce using rule 57 (Print)


State 88

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 37 (BlockStmtList)

    IfBlock                go to state 91
    IfStmt                 go to state 12
    FunctionCall           go to state 92
    Block                  go to state 109
    BlockStmtList          go to state 94
    BlockStmt              go to state 95
    Declaration            go to state 96
    DeclarationAssignment  go to state 97
    Type                   go to state 98
    Assignment             go to state 99
    Print                  go to state 100


State 89

   17 Condition: Expr SIGN Expr •
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    PLUS   shift, and go to state 56
    MINUS  shift, and go to state 57

    $default  reduce using rule 17 (Condition)


State 90

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN • LBRACE Block RBRACE ElseIfStmt

    LBRACE  shift, and go to state 110


State 91

   44 BlockStmt: IfBlock •

    $default  reduce using rule 44 (BlockStmt)


State 92

   43 BlockStmt: FunctionCall •

    $default  reduce using rule 43 (BlockStmt)


State 93

   16 ElseStmt: ELSE LBRACE Block • RBRACE

    RBRACE  shift, and go to state 111


State 94

   35 Block: BlockStmtList • ReturnStmt
   36      | BlockStmtList •

    RETURN  shift, and go to state 112

    $default  reduce using rule 36 (Block)

    ReturnStmt  go to state 113


State 95

   38 BlockStmtList: BlockStmt • BlockStmtList

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 37 (BlockStmtList)

    IfBlock                go to state 91
    IfStmt                 go to state 12
    FunctionCall           go to state 92
    BlockStmtList          go to state 114
    BlockStmt              go to state 95
    Declaration            go to state 96
    DeclarationAssignment  go to state 97
    Type                   go to state 98
    Assignment             go to state 99
    Print                  go to state 100


State 96

   39 BlockStmt: Declaration •

    $default  reduce using rule 39 (BlockStmt)


State 97

   40 BlockStmt: DeclarationAssignment •

    $default  reduce using rule 40 (BlockStmt)


State 98

   46 Declaration: Type • ID SEMICOLON
   47            | Type • ID LBRACKET Expr RBRACKET SEMICOLON
   48 DeclarationAssignment: Type • ID ASSIGN Expr SEMICOLON

    ID  shift, and go to state 115


State 99

   41 BlockStmt: Assignment •

    $default  reduce using rule 41 (BlockStmt)


State 100

   42 BlockStmt: Print •

    $default  reduce using rule 42 (BlockStmt)


State 101

   23 FunctionDeclaration: Type ID LPAREN ParamList RPAREN • LBRACE Block RBRACE

    LBRACE  shift, and go to state 116


State 102

   28 ParamTail: Param COMMA • ParamTail

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5

    ParamTail  go to state 117
    Param      go to state 74
    Type       go to state 75


State 103

   29 Param: Type ID •
   30      | Type ID • LBRACKET RBRACKET

    LBRACKET  shift, and go to state 118

    $default  reduce using rule 29 (Param)


State 104

   47 Declaration: Type ID LBRACKET Expr RBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 119


State 105

   48 DeclarationAssignment: Type ID ASSIGN Expr SEMICOLON •

    $default  reduce using rule 48 (DeclarationAssignment)


State 106

   66 Factor: ID LBRACKET Expr RBRACKET •

    $default  reduce using rule 66 (Factor)


State 107

   56 Assignment: ID LBRACKET Expr RBRACKET ASSIGN FunctionCall •

    $default  reduce using rule 56 (Assignment)


State 108

   55 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr • SEMICOLON
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 120
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 109

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 121


State 110

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE • Block RBRACE ElseIfStmt

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 37 (BlockStmtList)

    IfBlock                go to state 91
    IfStmt                 go to state 12
    FunctionCall           go to state 92
    Block                  go to state 122
    BlockStmtList          go to state 94
    BlockStmt              go to state 95
    Declaration            go to state 96
    DeclarationAssignment  go to state 97
    Type                   go to state 98
    Assignment             go to state 99
    Print                  go to state 100


State 111

   16 ElseStmt: ELSE LBRACE Block RBRACE •

    $default  reduce using rule 16 (ElseStmt)


State 112

   45 ReturnStmt: RETURN • Expr SEMICOLON

    ID      shift, and go to state 30
    LPAREN  shift, and go to state 31
    NUMBER  shift, and go to state 32

    Expr    go to state 123
    Term    go to state 36
    Factor  go to state 37


State 113

   35 Block: BlockStmtList ReturnStmt •

    $default  reduce using rule 35 (Block)


State 114

   38 BlockStmtList: BlockStmt BlockStmtList •

    $default  reduce using rule 38 (BlockStmtList)


State 115

   46 Declaration: Type ID • SEMICOLON
   47            | Type ID • LBRACKET Expr RBRACKET SEMICOLON
   48 DeclarationAssignment: Type ID • ASSIGN Expr SEMICOLON

    SEMICOLON  shift, and go to state 48
    LBRACKET   shift, and go to state 50
    ASSIGN     shift, and go to state 51


State 116

   23 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE • Block RBRACE

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VOID   shift, and go to state 5
    PRINT  shift, and go to state 6
    IF     shift, and go to state 7

    $default  reduce using rule 37 (BlockStmtList)

    IfBlock                go to state 91
    IfStmt                 go to state 12
    FunctionCall           go to state 92
    Block                  go to state 124
    BlockStmtList          go to state 94
    BlockStmt              go to state 95
    Declaration            go to state 96
    DeclarationAssignment  go to state 97
    Type                   go to state 98
    Assignment             go to state 99
    Print                  go to state 100


State 117

   28 ParamTail: Param COMMA ParamTail •

    $default  reduce using rule 28 (ParamTail)


State 118

   30 Param: Type ID LBRACKET • RBRACKET

    RBRACKET  shift, and go to state 125


State 119

   47 Declaration: Type ID LBRACKET Expr RBRACKET SEMICOLON •

    $default  reduce using rule 47 (Declaration)


State 120

   55 Assignment: ID LBRACKET Expr RBRACKET ASSIGN Expr SEMICOLON •

    $default  reduce using rule 55 (Assignment)


State 121

   12 IfStmt: IF LPAREN Condition RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 12 (IfStmt)


State 122

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block • RBRACE ElseIfStmt

    RBRACE  shift, and go to state 126


State 123

   45 ReturnStmt: RETURN Expr • SEMICOLON
   58 Expr: Expr • PLUS Term
   59     | Expr • MINUS Term

    SEMICOLON  shift, and go to state 127
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57


State 124

   23 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block • RBRACE

    RBRACE  shift, and go to state 128


State 125

   30 Param: Type ID LBRACKET RBRACKET •

    $default  reduce using rule 30 (Param)


State 126

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE • ElseIfStmt

    ELSE_IF  shift, and go to state 27

    $default  reduce using rule 13 (ElseIfStmt)

    ElseIfStmt  go to state 129


State 127

   45 ReturnStmt: RETURN Expr SEMICOLON •

    $default  reduce using rule 45 (ReturnStmt)


State 128

   23 FunctionDeclaration: Type ID LPAREN ParamList RPAREN LBRACE Block RBRACE •

    $default  reduce using rule 23 (FunctionDeclaration)


State 129

   14 ElseIfStmt: ELSE_IF LPAREN Condition RPAREN LBRACE Block RBRACE ElseIfStmt •

    $default  reduce using rule 14 (ElseIfStmt)
