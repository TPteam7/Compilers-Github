t18 = 5
length = t18
array = array_decl length
t19 = 0
i = t19

WhileStart3:
i < length 
goto Continue3
arg i
t20 = call factorial
fact = t20
array[i] = fact
t21 = 1
t22 = i + t21 
i = t22
goto WhileStart3 

Continue3:
t23 = 0
i = t23

WhileStart4:
i < length 
goto Continue4
t24 = array[i]
arg t24
t25 = call printInt
var = t25
t26 = 1
t27 = i + t26 
i = t27
goto WhileStart4 

Continue4:

function add 
a param 
b param 
t0 = a + b 
sum = t0
t1 = 5
t2 = sum + t1 
temp = t2
t3 = 2
t4 = temp * t3 
doubleSum = t4
t5 = 50
doubleSum > t5 
if goto L1
goto L2 

L1:
doubleSum print 
goto L0 

L2:
t6 = 0
t6 print 
goto L0 

L0:
doubleSum return 

function subtract 
a param 
b param 
t7 = a - b 
c = t7

WhileStart0:
t8 = 20
c < t8 
goto Continue0
c print 
t9 = 2
t10 = c + t9 
c = t10
goto WhileStart0 

Continue0:
c return 

function factorial 
n param 
t11 = 1
result = t11
current = n

WhileStart1:
t12 = 1
current > t12 
goto Continue1
t13 = result * current 
result = t13
t14 = 1
t15 = current - t14 
current = t15
goto WhileStart1 

Continue1:
result return 

function modulus 
dividend param 
divisor param 

WhileStart2:
dividend >= divisor 
goto Continue2
t16 = dividend - divisor 
dividend = t16
goto WhileStart2 

Continue2:
dividend return 

function printInt 
a param 
a print 
t17 = 1
t17 return 
